# JMH 1.12 (released 99 days ago, please consider updating!)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: fourcasters.DoubleFormatting.speedyTest

# Run progress: 0.00% complete, ETA 00:00:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 167.752 ops/s
# Warmup Iteration   2: 220.739 ops/s
# Warmup Iteration   3: 221.535 ops/s
# Warmup Iteration   4: 225.125 ops/s
# Warmup Iteration   5: 225.301 ops/s
Iteration   1: 224.323 ops/s
Iteration   2: 224.900 ops/s
Iteration   3: 223.935 ops/s
Iteration   4: 225.225 ops/s
Iteration   5: 225.270 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "speedyTest":
  224.731 ±(99.9%) 2.248 ops/s [Average]
  (min, avg, max) = (223.935, 224.731, 225.270), stdev = 0.584
  CI (99.9%): [222.482, 226.979] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 154022 total address lines.
Perf output processed (skipped 5.142 seconds):
 Column 1: cycles (6954 events)
 Column 2: instructions (7015 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f81509c71bc:0x7f81509c736a] in fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits

                                                                      ;*if_icmpge
                                                                      ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@69 (line 154)
                                                                      ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                      ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@2 (line 169)
                                                                      ;   {runtime_call}
                        0x00007f81509c71bc: callq  0x00007f81659e6160  ;*if_icmpge
                                                                      ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@69 (line 154)
                                                                      ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                      ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@2 (line 169)
                                                                      ;   {runtime_call}
  0.12%    0.07%     ↗  0x00007f81509c71c1: mov    %rbx,%r13
                     │  0x00007f81509c71c4: shl    $0x3,%r13          ;*return
                     │                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                     │                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                     │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                     │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@68 (line 179)
                     │  0x00007f81509c71c8: mov    0xc(%r13),%r9d
                     │  0x00007f81509c71cc: cmp    %r9d,%r10d
                     │  0x00007f81509c71cf: jae    0x00007f81509c7911
  0.12%    0.01%     │  0x00007f81509c71d5: mov    $0x2e,%r11d
                     │  0x00007f81509c71db: mov    %r11w,0x10(%r13,%r10,2)  ;*lload
                     │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@72 (line 180)
                    ↗│  0x00007f81509c71e1: mov    0x18(%rsp),%r11
  2.46%    2.72%    ││  0x00007f81509c71e6: imul   0x28(%rsp),%r11    ;*lmul
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@76 (line 180)
  0.14%    0.06%    ││  0x00007f81509c71ec: cmp    (%rsp),%r11
                    ││  0x00007f81509c71f0: jg     0x00007f81509c7801  ;*goto
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@94 (line 184)
                    ││  0x00007f81509c71f6: mov    (%rsp),%r9
                    ││  0x00007f81509c71fa: sub    %r11,%r9           ;*lsub
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@89 (line 182)
  2.57%    1.15%    ││  0x00007f81509c71fd: mov    0x14(%rsp),%r10d
  0.20%    0.07%    ││  0x00007f81509c7202: dec    %r10d              ; OopMap{[32]=Oop off=357}
                    ││                                                ;*goto
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@94 (line 184)
                    ││  0x00007f81509c7205: test   %eax,0x164d8df5(%rip)        # 0x00007f8166ea0000
                    ││                                                ;*goto
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@94 (line 184)
                    ││                                                ;   {poll}
                    ││  0x00007f81509c720b: test   %r9,%r9
                    ││  0x00007f81509c720e: jle    0x00007f81509c737a
  2.30%    0.19%    ││  0x00007f81509c7214: mov    %r8d,0x10(%rsp)    ;*getstatic d_magnitudes
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@13 (line 173)
  0.19%    0.27%    ││  0x00007f81509c7219: mov    %r10d,%r8d
  0.14%    0.06%    ││  0x00007f81509c721c: add    $0x143,%r8d        ;*iadd
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@21 (line 173)
  0.01%    0.01%    ││  0x00007f81509c7223: cmp    $0x278,%r8d
                    ││  0x00007f81509c722a: jae    0x00007f81509c776b
  2.62%    0.51%    ││  0x00007f81509c7230: movslq %r10d,%r11         ;*daload
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@22 (line 173)
  0.22%    0.19%    ││  0x00007f81509c7233: mov    $0x76de02c10,%r8   ;   {oop([D)}
  0.12%    0.06%    ││  0x00007f81509c723d: vmovsd 0xa28(%r8,%r11,8),%xmm0
  0.06%    0.01%    ││  0x00007f81509c7247: vcvtsi2sd %r9,%xmm1,%xmm1
  2.88%    1.38%    ││  0x00007f81509c724c: mov    $0x76de03fe0,%r8   ;   {oop([D)}
  0.14%    0.14%    ││  0x00007f81509c7256: vmulsd 0xa28(%r8,%r11,8),%xmm1,%xmm1
  2.49%    1.61%    ││  0x00007f81509c7260: vcvttsd2si %xmm0,%rcx
  0.26%    0.17%    ││  0x00007f81509c7265: cmp    -0x1b536c(%rip),%rcx        # Stub::double_sign_flip
                    ││                                                ;   {external_word}
  0.04%    0.07%  ╭ ││  0x00007f81509c726c: jne    0x00007f81509c727d
                  │ ││  0x00007f81509c726e: sub    $0x8,%rsp
                  │ ││  0x00007f81509c7272: vmovsd %xmm0,(%rsp)
                  │ ││  0x00007f81509c7277: callq  Stub::d2l_fixup    ;   {runtime_call}
                  │ ││  0x00007f81509c727c: pop    %rcx               ;*d2l  ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@23 (line 173)
  2.36%    4.23%  ↘ ││  0x00007f81509c727d: vcvttsd2si %xmm1,%rdi
  7.46%    6.20%    ││  0x00007f81509c7282: cmp    -0x1b5389(%rip),%rdi        # Stub::double_sign_flip
                    ││                                                ;   {external_word}
  2.59%    0.87%   ╭││  0x00007f81509c7289: jne    0x00007f81509c729a
                   │││  0x00007f81509c728b: sub    $0x8,%rsp
                   │││  0x00007f81509c728f: vmovsd %xmm1,(%rsp)
                   │││  0x00007f81509c7294: callq  Stub::d2l_fixup    ;   {runtime_call}
                   │││  0x00007f81509c7299: pop    %rdi               ;*d2l  ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@43 (line 175)
  2.43%    3.68%   ↘││  0x00007f81509c729a: mov    %edi,%r8d          ;*l2i  ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@52 (line 176)
                    ││  0x00007f81509c729d: cmp    $0x24,%r8d
                    ││  0x00007f81509c72a1: jae    0x00007f81509c7795  ;*caload
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@53 (line 176)
  0.13%    0.16%    ││  0x00007f81509c72a7: mov    0x20(%rsp),%r11
                    ││  0x00007f81509c72ac: mov    0x10(%r11),%ebx    ;*getfield value
                    ││                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                    ││                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
  2.52%    3.46%    ││  0x00007f81509c72b0: mov    0xc(%r12,%rbx,8),%r11d  ;*arraylength
                    ││                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                    ││                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
                    ││                                                ; implicit exception: dispatches to 0x00007f81509c7bd1
                    ││  0x00007f81509c72b5: mov    %rdi,0x28(%rsp)
  0.23%    0.27%    ││  0x00007f81509c72ba: mov    %rcx,0x18(%rsp)
                    ││  0x00007f81509c72bf: mov    %r10d,0x14(%rsp)
  2.29%    4.38%    ││  0x00007f81509c72c4: mov    %r9,(%rsp)
                    ││  0x00007f81509c72c8: mov    $0x76de02b58,%r10  ;   {oop([C)}
  0.14%    0.17%    ││  0x00007f81509c72d2: movzwl 0x10(%r10,%r8,2),%r8d  ;*caload
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@53 (line 176)
  5.21%    5.84%    ││  0x00007f81509c72d8: mov    %r8d,0x40(%rsp)
  2.83%    0.94%    ││  0x00007f81509c72dd: mov    0x20(%rsp),%r10
                    ││  0x00007f81509c72e2: mov    0xc(%r10),%ecx     ;*getfield count
                    ││                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
           0.01%    ││  0x00007f81509c72e6: mov    %ecx,%r9d
                    ││  0x00007f81509c72e9: sub    %r11d,%r9d
  2.76%    4.83%    ││  0x00007f81509c72ec: mov    %rbx,%rdi
                    ││  0x00007f81509c72ef: shl    $0x3,%rdi          ;*getfield value
                    ││                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                    ││                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
                    ││  0x00007f81509c72f3: inc    %r9d
                    ││  0x00007f81509c72f6: mov    %ecx,%r10d
  2.42%    4.92%    ││  0x00007f81509c72f9: inc    %r10d              ;*iadd
                    ││                                                ; - java.lang.AbstractStringBuilder::append@6 (line 622)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
                    ││  0x00007f81509c72fc: test   %r9d,%r9d
                    ││  0x00007f81509c72ff: jg     0x00007f81509c73fd  ;*ifle
                    ││                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                    ││                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
  0.01%             ││  0x00007f81509c7305: mov    0x20(%rsp),%r11
                    ││  0x00007f81509c730a: mov    %r10d,0xc(%r11)    ;*putfield count
                    ││                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
  2.82%    4.13%    ││  0x00007f81509c730e: mov    %rdi,%r11          ;*getfield value
                    ││                                                ; - java.lang.AbstractStringBuilder::append@11 (line 623)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
                    ││  0x00007f81509c7311: mov    0xc(%rdi),%ebp
                    ││  0x00007f81509c7314: cmp    %ebp,%ecx
                    ││  0x00007f81509c7316: jae    0x00007f81509c77c9
                    ││  0x00007f81509c731c: mov    0x40(%rsp),%r9d
  2.65%    4.89%    ││  0x00007f81509c7321: mov    %r9w,0x10(%rdi,%rcx,2)  ;*castore
                    ││                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                    ││                                                ; - java.lang.StringBuilder::append@2 (line 202)
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@54 (line 176)
  5.25%    7.30%    ││  0x00007f81509c7327: mov    0x10(%rsp),%r8d
                    ││  0x00007f81509c732c: dec    %r8d               ;*iinc
                    ││                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@58 (line 177)
                    ││  0x00007f81509c732f: test   %r8d,%r8d
                    ╰│  0x00007f81509c7332: jne    0x00007f81509c71e1  ;*ifne
                     │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@62 (line 178)
                     │  0x00007f81509c7338: mov    %ecx,%r9d
  0.12%    0.23%     │  0x00007f81509c733b: sub    %ebp,%r9d
                     │  0x00007f81509c733e: add    $0x2,%r9d
                     │  0x00007f81509c7342: test   %r9d,%r9d
                     │  0x00007f81509c7345: jg     0x00007f81509c7571  ;*ifle
                     │                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                     │                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                     │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                     │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@68 (line 179)
                     │  0x00007f81509c734b: mov    %r10d,%r9d
  0.13%    0.14%     │  0x00007f81509c734e: inc    %r9d
                     │  0x00007f81509c7351: mov    0x20(%rsp),%r11
                     │  0x00007f81509c7356: mov    %r9d,0xc(%r11)     ;*putfield count
                     │                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                     │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                     │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits@68 (line 179)
                     │  0x00007f81509c735a: test   %ebx,%ebx
                     ╰  0x00007f81509c735c: jne    0x00007f81509c71c1
                        0x00007f81509c7362: mov    $0xfffffff6,%esi
                        0x00007f81509c7367: mov    %r10d,%ebp
                        0x00007f81509c736a: nop    
....................................................................................................
 61.40%   65.43%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f81509cb990:0x7f81509cbe0e] in fourcasters.perfid.SpeedyDoubleFormatter::append

                           0x00007f81509cb990 (offset:  112): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
                           0x00007f81509cb994 (offset:  116): 0xf4f4f4f4
                           0x00007f81509cb998 (offset:  120): 0xf4f4f4f4   0xf4f4f4f4f4f4f4f4
                           0x00007f81509cb99c (offset:  124): 0xf4f4f4f4
                         [Entry Point]
                         [Verified Entry Point]
                           # {method} {0x00007f814e11a6a8} &apos;append&apos; &apos;(Ljava/lang/StringBuilder;D)V&apos; in &apos;fourcasters/perfid/SpeedyDoubleFormatter&apos;
                           # parm0:    rsi:rsi   = &apos;java/lang/StringBuilder&apos;
                           # parm1:    xmm0:xmm0   = double
                           #           [sp+0x80]  (sp of caller)
  0.03%    0.01%           0x00007f81509cb9a0: mov    %eax,-0x14000(%rsp)  ;   {no_reloc}
  0.04%    0.10%           0x00007f81509cb9a7: push   %rbp
                           0x00007f81509cb9a8: sub    $0x70,%rsp         ;*synchronization entry
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@-1 (line 45)
  0.19%    0.04%           0x00007f81509cb9ac: mov    %rsi,%r10
  0.01%    0.06%           0x00007f81509cb9af: vmovapd %xmm0,%xmm1
                           0x00007f81509cb9b3: vucomisd -0x53(%rip),%xmm0        # 0x00007f81509cb968
                                                                         ;   {section_word}
  0.09%    0.13%  ╭        0x00007f81509cb9bb: jp     0x00007f81509cb9c3
  0.01%    0.07%  │        0x00007f81509cb9bd: je     0x00007f81509cc819  ;*ifne
                  │                                                      ; - fourcasters.perfid.SpeedyDoubleFormatter::append@3 (line 45)
                  ↘        0x00007f81509cb9c3: vxorpd %xmm0,%xmm0,%xmm0
  0.12%    0.03%           0x00007f81509cb9c7: vucomisd %xmm1,%xmm0
  0.07%    0.07%   ╭       0x00007f81509cb9cb: jbe    0x00007f81509cba20  ;*ifge
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@40 (line 52)
  0.16%    0.13%   │       0x00007f81509cb9cd: mov    %rsi,%rbx
           0.06%   │       0x00007f81509cb9d0: mov    0x10(%rsi),%ebp    ;*getfield value
                   │                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                   │                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
                   │                                                     ; implicit exception: dispatches to 0x00007f81509ccdad
  0.35%    0.34%   │       0x00007f81509cb9d3: mov    0xc(%r12,%rbp,8),%r11d  ;*arraylength
                   │                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                   │                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
                   │                                                     ; implicit exception: dispatches to 0x00007f81509ccdc1
  0.17%    0.29%   │       0x00007f81509cb9d8: mov    0xc(%rsi),%r10d    ;*getfield count
                   │                                                     ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
                   │       0x00007f81509cb9dc: mov    %r10d,%r8d
                   │       0x00007f81509cb9df: sub    %r11d,%r8d
  0.13%    0.16%   │       0x00007f81509cb9e2: mov    %rbp,%r9
                   │       0x00007f81509cb9e5: shl    $0x3,%r9           ;*getfield value
                   │                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                   │                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
  0.01%            │       0x00007f81509cb9e9: inc    %r8d
  0.01%    0.04%   │       0x00007f81509cb9ec: mov    %r10d,%ecx
           0.01%   │       0x00007f81509cb9ef: inc    %ecx               ;*iadd
                   │                                                     ; - java.lang.AbstractStringBuilder::append@6 (line 622)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
                   │       0x00007f81509cb9f1: test   %r8d,%r8d
                   │       0x00007f81509cb9f4: jg     0x00007f81509cc15c  ;*return
                   │                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                   │                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
  0.04%    0.07%   │       0x00007f81509cb9fa: mov    %ecx,0xc(%rbx)     ;*putfield count
                   │                                                     ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
                   │       0x00007f81509cb9fd: mov    0xc(%r9),%r11d     ; implicit exception: dispatches to 0x00007f81509ccdd9
  0.01%            │       0x00007f81509cba01: cmp    %r11d,%r10d
                   │       0x00007f81509cba04: jae    0x00007f81509cc535  ;*castore
                   │                                                     ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
                   │       0x00007f81509cba0a: vxorpd -0x1b9b12(%rip),%xmm1,%xmm1        # Stub::double_sign_flip
                   │                                                     ;*dneg
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@51 (line 54)
                   │                                                     ;   {external_word}
  0.07%    0.03%   │       0x00007f81509cba12: mov    $0x2d,%r11d
                   │       0x00007f81509cba18: mov    %r11w,0x10(%r9,%r10,2)  ;*castore
                   │                                                     ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                   │                                                     ; - java.lang.StringBuilder::append@2 (line 202)
                   │                                                     ; - fourcasters.perfid.SpeedyDoubleFormatter::append@46 (line 53)
  0.01%    0.01%   │╭      0x00007f81509cba1e: jmp    0x00007f81509cba23
  0.12%    0.13%   ↘│      0x00007f81509cba20: mov    %rsi,%rbx          ;*dload_1
                    │                                                    ; - fourcasters.perfid.SpeedyDoubleFormatter::append@53 (line 57)
  0.10%    0.07%    ↘      0x00007f81509cba23: vmovapd %xmm1,%xmm2
  0.07%    0.06%           0x00007f81509cba27: vucomisd -0xbf(%rip),%xmm1        # 0x00007f81509cb970
                                                                         ;   {section_word}
  0.39%    0.64%           0x00007f81509cba2f: jb     0x00007f81509cc55d  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@58 (line 57)
  0.13%    0.07%           0x00007f81509cba35: vmovsd -0x10d(%rip),%xmm1        # 0x00007f81509cb930
                                                                         ;   {section_word}
  0.06%                    0x00007f81509cba3d: vucomisd %xmm2,%xmm1
                           0x00007f81509cba41: ja     0x00007f81509cc855  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@66 (line 57)
  0.09%    0.03%           0x00007f81509cba47: vucomisd -0x11f(%rip),%xmm2        # 0x00007f81509cb930
                                                                         ;   {section_word}
  0.06%    0.03%           0x00007f81509cba4f: jb     0x00007f81509cc599  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@126 (line 64)
  0.13%    0.01%           0x00007f81509cba55: vmovsd -0x125(%rip),%xmm1        # 0x00007f81509cb938
                                                                         ;   {section_word}
  0.01%    0.04%           0x00007f81509cba5d: vucomisd %xmm2,%xmm1
  0.03%    0.01%           0x00007f81509cba61: ja     0x00007f81509cc88d  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@134 (line 64)
  0.04%    0.09%           0x00007f81509cba67: vucomisd -0x137(%rip),%xmm2        # 0x00007f81509cb938
                                                                         ;   {section_word}
  0.06%    0.06%           0x00007f81509cba6f: jb     0x00007f81509cc5d5  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@194 (line 71)
  0.12%    0.03%           0x00007f81509cba75: vmovsd -0x13d(%rip),%xmm1        # 0x00007f81509cb940
                                                                         ;   {section_word}
  0.06%    0.03%           0x00007f81509cba7d: vucomisd %xmm2,%xmm1
  0.01%    0.01%           0x00007f81509cba81: ja     0x00007f81509cc8c5  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@200 (line 71)
  0.06%    0.07%           0x00007f81509cba87: vucomisd -0x14f(%rip),%xmm2        # 0x00007f81509cb940
                                                                         ;   {section_word}
  0.03%    0.06%           0x00007f81509cba8f: jb     0x00007f81509cc611  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@258 (line 78)
  0.14%    0.04%           0x00007f81509cba95: vmovsd -0x155(%rip),%xmm1        # 0x00007f81509cb948
                                                                         ;   {section_word}
  0.04%    0.01%           0x00007f81509cba9d: vucomisd %xmm2,%xmm1
                           0x00007f81509cbaa1: ja     0x00007f81509cc8fd  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@266 (line 78)
  0.12%    0.01%           0x00007f81509cbaa7: vucomisd -0x167(%rip),%xmm2        # 0x00007f81509cb948
                                                                         ;   {section_word}
  0.07%    0.03%           0x00007f81509cbaaf: jb     0x00007f81509cc64d  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@318 (line 84)
  0.16%    0.03%           0x00007f81509cbab5: vmovsd -0x16d(%rip),%xmm1        # 0x00007f81509cb950
                                                                         ;   {section_word}
  0.01%    0.04%           0x00007f81509cbabd: vucomisd %xmm2,%xmm1
           0.03%           0x00007f81509cbac1: ja     0x00007f81509cc935  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@326 (line 84)
  0.16%    0.13%           0x00007f81509cbac7: vucomisd -0x17f(%rip),%xmm2        # 0x00007f81509cb950
                                                                         ;   {section_word}
  0.04%    0.06%           0x00007f81509cbacf: jb     0x00007f81509cc689  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@378 (line 90)
  0.09%    0.06%           0x00007f81509cbad5: vmovsd -0x1bd(%rip),%xmm1        # 0x00007f81509cb920
                                                                         ;   {section_word}
  0.04%    0.01%           0x00007f81509cbadd: vucomisd %xmm2,%xmm1
  0.03%                    0x00007f81509cbae1: ja     0x00007f81509cc96d  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@386 (line 90)
  0.07%    0.09%           0x00007f81509cbae7: vucomisd -0x1cf(%rip),%xmm2        # 0x00007f81509cb920
                                                                         ;   {section_word}
  0.03%    0.06%           0x00007f81509cbaef: jb     0x00007f81509cc6c5  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@438 (line 96)
  0.12%    0.01%           0x00007f81509cbaf5: vmovsd -0x1d5(%rip),%xmm1        # 0x00007f81509cb928
                                                                         ;   {section_word}
  0.03%    0.03%           0x00007f81509cbafd: vucomisd %xmm2,%xmm1
  0.03%    0.01%           0x00007f81509cbb01: ja     0x00007f81509cc9a5  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@446 (line 96)
  0.14%    0.09%           0x00007f81509cbb07: vucomisd -0x1e7(%rip),%xmm2        # 0x00007f81509cb928
                                                                         ;   {section_word}
  0.04%    0.03%           0x00007f81509cbb0f: jb     0x00007f81509cc701  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@498 (line 102)
  0.09%    0.01%           0x00007f81509cbb15: vmovsd -0x1c5(%rip),%xmm0        # 0x00007f81509cb958
                                                                         ;   {section_word}
  0.01%    0.01%           0x00007f81509cbb1d: mov    $0xa3d70a3d70a3d70b,%rax
                           0x00007f81509cbb27: vucomisd %xmm2,%xmm0
           0.01%           0x00007f81509cbb2b: ja     0x00007f81509cc30b  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@506 (line 102)
  0.10%    0.06%           0x00007f81509cbb31: vucomisd -0x1e1(%rip),%xmm2        # 0x00007f81509cb958
                                                                         ;   {section_word}
  0.01%    0.07%           0x00007f81509cbb39: jb     0x00007f81509cc73d  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@558 (line 108)
  0.13%    0.17%           0x00007f81509cbb3f: vmovsd -0x1e7(%rip),%xmm0        # 0x00007f81509cb960
                                                                         ;   {section_word}
                           0x00007f81509cbb47: vucomisd %xmm2,%xmm0
  0.03%    0.07%           0x00007f81509cbb4b: ja     0x00007f81509cc284  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@566 (line 108)
  0.07%    0.11%           0x00007f81509cbb51: vucomisd -0x1f9(%rip),%xmm2        # 0x00007f81509cb960
                                                                         ;   {section_word}
  0.06%    0.03%           0x00007f81509cbb59: jb     0x00007f81509cc779  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@619 (line 114)
  0.14%    0.14%           0x00007f81509cbb5f: vmovsd -0x1ef(%rip),%xmm0        # 0x00007f81509cb978
                                                                         ;   {section_word}
           0.01%           0x00007f81509cbb67: vucomisd %xmm2,%xmm0
  0.01%    0.01%           0x00007f81509cbb6b: ja     0x00007f81509cbe71  ;*ifge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@627 (line 114)
  0.14%    0.17%           0x00007f81509cbb71: vucomisd %xmm2,%xmm2
  0.03%    0.07%     ╭     0x00007f81509cbb75: jp     0x00007f81509cbb7d
  0.09%    0.07%     │     0x00007f81509cbb77: je     0x00007f81509cbe25
                     ↘     0x00007f81509cbb7d: mov    $0x134,%r10d       ;*d2i  ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@17 (line 145)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.13%    0.16%           0x00007f81509cbb83: cmp    $0xfffffebd,%r10d
                           0x00007f81509cbb8a: jl     0x00007f81509cc9dd  ;*if_icmpge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@25 (line 148)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
                           0x00007f81509cbb90: cmp    $0x134,%r10d
                           0x00007f81509cbb97: jg     0x00007f81509cc9fd  ;*if_icmple
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@41 (line 150)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.06%    0.21%           0x00007f81509cbb9d: mov    %r10d,%ebp
                           0x00007f81509cbba0: add    $0x143,%ebp        ;*iadd
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@58 (line 152)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.07%    0.06%           0x00007f81509cbba6: cmp    $0x278,%ebp
                           0x00007f81509cbbac: jae    0x00007f81509cc42d
  0.09%    0.11%           0x00007f81509cbbb2: movslq %r10d,%r11
  0.04%    0.04%           0x00007f81509cbbb5: mov    $0x76de02c10,%r8   ;   {oop([D)}
                           0x00007f81509cbbbf: vmovsd 0xa28(%r8,%r11,8),%xmm0  ;*daload
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@59 (line 152)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.30%    0.57%           0x00007f81509cbbc9: vucomisd %xmm0,%xmm2
  0.60%    0.64%           0x00007f81509cbbcd: jb     0x00007f81509cc7b5  ;*iflt
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@61 (line 152)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.16%    0.16%           0x00007f81509cbbd3: cmp    $0x135,%r10d
                           0x00007f81509cbbda: jge    0x00007f81509cca1d  ;*dload_0
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@72 (line 154)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.16%    0.13%        ↗  0x00007f81509cbbe0: movslq %r10d,%r11         ;*daload
                        │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@720 (line 128)
           0.01%        │  0x00007f81509cbbe3: vmovsd 0xa28(%r8,%r11,8),%xmm0  ;*daload
                        │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@82 (line 154)
                        │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                        │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.09%    0.03%        │  0x00007f81509cbbed: vucomisd %xmm0,%xmm2
  0.29%    0.07%      ╭ │  0x00007f81509cbbf1: jae    0x00007f81509cbdf4  ;*iflt
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@84 (line 154)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.14%    0.06%      │ │  0x00007f81509cbbf7: mov    %r10d,%r9d
                      │ │  0x00007f81509cbbfa: dec    %r9d               ;*iinc
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@93 (line 156)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
                      │ │  0x00007f81509cbbfd: cmp    $0xfffffecf,%r9d
                      │ │  0x00007f81509cbc04: jl     0x00007f81509cca3d  ;*if_icmpge
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@684 (line 125)
           0.01%      │ │  0x00007f81509cbc0a: mov    %r10d,%ebp
  0.12%    0.03%      │ │  0x00007f81509cbc0d: add    $0x131,%ebp        ;*isub
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@719 (line 128)
                      │ │  0x00007f81509cbc13: cmp    $0x278,%ebp
                      │ │  0x00007f81509cbc19: jae    0x00007f81509cc455  ;*daload
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@720 (line 128)
                      │ │  0x00007f81509cbc1f: mov    %r9d,0x14(%rsp)
                      │ │  0x00007f81509cbc24: mov    %r10d,0x10(%rsp)
  0.26%    0.06%      │ │  0x00007f81509cbc29: mov    %rbx,0x8(%rsp)     ;*if_icmpge
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@684 (line 125)
                      │ │  0x00007f81509cbc2e: vdivsd 0x998(%r8,%r11,8),%xmm2,%xmm0
  2.23%    1.54%      │ │  0x00007f81509cbc38: vmovsd %xmm2,(%rsp)
                      │ │  0x00007f81509cbc3d: vcvttsd2si %xmm0,%r10
  0.62%    0.87%      │ │  0x00007f81509cbc42: cmp    -0x1b9d49(%rip),%r10        # Stub::double_sign_flip
                      │ │                                                ;   {external_word}
  0.22%    0.06%      │╭│  0x00007f81509cbc49: jne    0x00007f81509cbc5b
                      │││  0x00007f81509cbc4b: sub    $0x8,%rsp
                      │││  0x00007f81509cbc4f: vmovsd %xmm0,(%rsp)
                      │││  0x00007f81509cbc54: callq  Stub::d2l_fixup    ;   {runtime_call}
                      │││  0x00007f81509cbc59: pop    %r10               ;*d2l  ; - fourcasters.perfid.SpeedyDoubleFormatter::append@722 (line 128)
  0.14%    0.04%      │↘│  0x00007f81509cbc5b: mov    %r10,%r11
                      │ │  0x00007f81509cbc5e: sar    $0x3f,%r11
                      │ │  0x00007f81509cbc62: mov    $0x1,%ecx
                      │ │  0x00007f81509cbc67: mov    $0x6666666666666667,%rax
  0.12%               │ │  0x00007f81509cbc71: imul   %r10
  0.16%    0.01%      │ │  0x00007f81509cbc74: mov    %rdx,%r9
                      │ │  0x00007f81509cbc77: sar    $0x2,%r9
  0.19%    0.01%      │ │  0x00007f81509cbc7b: sub    %r11,%r9           ;*lrem
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@730 (line 129)
  0.17%               │ │  0x00007f81509cbc7e: mov    %r9,%rdx
                      │ │  0x00007f81509cbc81: add    $0x1,%rdx
  0.20%               │ │  0x00007f81509cbc85: mov    %r9,%r11
                      │ │  0x00007f81509cbc88: shl    $0x3,%r11
  0.04%               │ │  0x00007f81509cbc8c: mov    %r9,%r8
  0.06%               │ │  0x00007f81509cbc8f: shl    %r8
  0.14%               │ │  0x00007f81509cbc92: add    %r11,%r8
  0.20%               │ │  0x00007f81509cbc95: sub    %r8,%r10
  0.19%               │ │  0x00007f81509cbc98: cmp    $0x5,%r10
  0.24%               │ │  0x00007f81509cbc9c: cmovl  %r9,%rdx           ;*lstore
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@755 (line 129)
  0.24%    0.10%      │ │  0x00007f81509cbca0: mov    %rbx,%rsi
                      │ │  0x00007f81509cbca3: callq  0x00007f8150806160  ; OopMap{[8]=Oop off=776}
                      │ │                                                ;*invokestatic appendFractDigits
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@761 (line 130)
                      │ │                                                ;   {static_call}
  0.01%               │ │  0x00007f81509cbca8: mov    0x8(%rsp),%r10
                      │ │  0x00007f81509cbcad: mov    0x10(%r10),%ebp    ;*getfield value
                      │ │                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
                      │ │                                                ; implicit exception: dispatches to 0x00007f81509ccd4d
  0.16%    0.09%      │ │  0x00007f81509cbcb1: mov    0xc(%r12,%rbp,8),%edx  ;*arraylength
                      │ │                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
                      │ │                                                ; implicit exception: dispatches to 0x00007f81509ccd61
  0.13%               │ │  0x00007f81509cbcb6: mov    0xc(%r10),%r8d     ;*getfield count
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
                      │ │  0x00007f81509cbcba: mov    %r8d,%r11d
                      │ │  0x00007f81509cbcbd: sub    %edx,%r11d
  0.12%    0.14%      │ │  0x00007f81509cbcc0: mov    %rbp,%rdi
                      │ │  0x00007f81509cbcc3: shl    $0x3,%rdi          ;*getfield value
                      │ │                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
                      │ │  0x00007f81509cbcc7: inc    %r11d
                      │ │  0x00007f81509cbcca: mov    %r8d,%r10d
  0.24%    0.20%      │ │  0x00007f81509cbccd: inc    %r10d              ;*iadd
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@6 (line 622)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
                      │ │  0x00007f81509cbcd0: vmovd  %r10d,%xmm1
                      │ │  0x00007f81509cbcd5: test   %r11d,%r11d
                      │ │  0x00007f81509cbcd8: jg     0x00007f81509cbedd  ;*ifle
                      │ │                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
  0.01%               │ │  0x00007f81509cbcde: mov    %rdi,%rbx          ;*getfield value
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@11 (line 623)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
  0.24%    0.06%      │ │  0x00007f81509cbce1: mov    0x8(%rsp),%r11
                      │ │  0x00007f81509cbce6: vmovd  %xmm1,%r10d
                      │ │  0x00007f81509cbceb: mov    %r10d,0xc(%r11)    ;*putfield count
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
  0.01%               │ │  0x00007f81509cbcef: mov    0xc(%rdi),%r10d    ; implicit exception: dispatches to 0x00007f81509ccd79
  0.12%    0.01%      │ │  0x00007f81509cbcf3: mov    %r10d,0x50(%rsp)
                      │ │  0x00007f81509cbcf8: cmp    %r10d,%r8d
                      │ │  0x00007f81509cbcfb: jae    0x00007f81509cc475
                      │ │  0x00007f81509cbd01: mov    $0x45,%r10d
  0.01%               │ │  0x00007f81509cbd07: mov    %r10w,0x10(%rdi,%r8,2)  ;*castore
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@26 (line 623)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 202)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@767 (line 131)
  0.14%    0.07%      │ │  0x00007f81509cbd0d: mov    0x14(%rsp),%r10d
                      │ │  0x00007f81509cbd12: cmp    $0x80000000,%r10d
                      │ │  0x00007f81509cbd19: je     0x00007f81509cca5d  ;*if_icmpne
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@3 (line 640)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbd1f: test   %r10d,%r10d
                      │ │  0x00007f81509cbd22: jl     0x00007f81509cca71  ;*ifge
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@16 (line 644)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
  0.01%               │ │  0x00007f81509cbd28: mov    $0x76d12dc68,%r11  ;   {oop([I)}
  0.07%    0.21%      │ │  0x00007f81509cbd32: mov    0x10(%r11),%ebp    ;*iaload
                      │ │                                                ; - java.lang.Integer::stringSize@7 (line 473)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@30 (line 645)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbd36: cmp    %ebp,%r10d
                      │ │  0x00007f81509cbd39: jg     0x00007f81509cca85  ;*if_icmpgt
                      │ │                                                ; - java.lang.Integer::stringSize@8 (line 473)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@30 (line 645)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbd3f: mov    %r8d,%r9d
  0.03%    0.01%      │ │  0x00007f81509cbd42: sub    0x50(%rsp),%r9d
  0.04%    0.17%      │ │  0x00007f81509cbd47: mov    %r8d,%r11d
                      │ │  0x00007f81509cbd4a: add    $0x2,%r11d         ;*iadd
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@39 (line 646)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbd4e: add    $0x2,%r9d
                      │ │  0x00007f81509cbd52: test   %r9d,%r9d
                      │ │  0x00007f81509cbd55: jg     0x00007f81509cc00f  ;*return
                      │ │                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@43 (line 647)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
  0.13%    0.31%      │ │  0x00007f81509cbd5b: cmp    $0x10000,%r10d
                      │ │  0x00007f81509cbd62: jge    0x00007f81509ccaa1  ;*if_icmplt
                      │ │                                                ; - java.lang.Integer::getChars@20 (line 444)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@52 (line 648)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbd68: imul   $0xcccd,0x10(%rsp),%ebx
                      │ │  0x00007f81509cbd70: add    $0xffff3333,%ebx
                      │ │  0x00007f81509cbd76: shr    $0x13,%ebx         ;*iushr
                      │ │                                                ; - java.lang.Integer::getChars@81 (line 456)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@52 (line 648)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
  0.07%    0.24%      │ │  0x00007f81509cbd79: mov    %ebx,%r9d
                      │ │  0x00007f81509cbd7c: shl    %r9d               ;*ishl
                      │ │                                                ; - java.lang.Integer::getChars@89 (line 457)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@52 (line 648)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbd7f: mov    %ebx,%ecx
                      │ │  0x00007f81509cbd81: shl    $0x3,%ecx          ;*ishl
                      │ │                                                ; - java.lang.Integer::getChars@86 (line 457)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@52 (line 648)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
  0.19%    0.11%      │ │  0x00007f81509cbd84: mov    %ecx,%r10d
                      │ │  0x00007f81509cbd87: add    %r9d,%r10d
                      │ │  0x00007f81509cbd8a: mov    0x10(%rsp),%ebp
                      │ │  0x00007f81509cbd8e: sub    %r10d,%ebp
  0.10%               │ │  0x00007f81509cbd91: dec    %ebp               ;*isub
                      │ │                                                ; - java.lang.Integer::getChars@91 (line 457)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@52 (line 648)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbd93: cmp    $0x24,%ebp
                      │ │  0x00007f81509cbd96: jae    0x00007f81509cc49d
                      │ │  0x00007f81509cbd9c: movslq %ecx,%r10
                      │ │  0x00007f81509cbd9f: movslq %r9d,%r9
  0.10%    0.24%      │ │  0x00007f81509cbda2: add    %r9,%r10
                      │ │  0x00007f81509cbda5: movslq 0x10(%rsp),%r9
                      │ │  0x00007f81509cbdaa: sub    %r10,%r9
                      │ │  0x00007f81509cbdad: mov    $0x76d12da60,%r10  ;   {oop([C)}
  0.13%    0.36%      │ │  0x00007f81509cbdb7: movzwl 0xe(%r10,%r9,2),%ebp  ;*caload
                      │ │                                                ; - java.lang.Integer::getChars@105 (line 458)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@52 (line 648)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
  0.03%               │ │  0x00007f81509cbdbd: mov    0xc(%rdi),%r9d     ; implicit exception: dispatches to 0x00007f81509ccd95
                      │ │  0x00007f81509cbdc1: vmovd  %xmm1,%ecx
                      │ │  0x00007f81509cbdc5: cmp    %r9d,%ecx
                      │ │  0x00007f81509cbdc8: jae    0x00007f81509cc4c1
  0.10%    0.20%      │ │  0x00007f81509cbdce: movslq %r8d,%r10
  0.01%    0.03%      │ │  0x00007f81509cbdd1: mov    %bp,0x12(%rdi,%r10,2)  ;*castore
                      │ │                                                ; - java.lang.Integer::getChars@106 (line 458)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@52 (line 648)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbdd7: test   %ebx,%ebx
                      │ │  0x00007f81509cbdd9: jne    0x00007f81509cc7f1  ;*ifne
                      │ │                                                ; - java.lang.Integer::getChars@110 (line 460)
                      │ │                                                ; - java.lang.AbstractStringBuilder::append@52 (line 648)
                      │ │                                                ; - java.lang.StringBuilder::append@2 (line 208)
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@773 (line 132)
                      │ │  0x00007f81509cbddf: mov    0x8(%rsp),%r10
  0.16%    0.38%      │ │  0x00007f81509cbde4: mov    %r11d,0xc(%r10)    ;*synchronization entry
                      │ │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@-1 (line 45)
  0.03%               │ │  0x00007f81509cbde8: add    $0x70,%rsp
                      │ │  0x00007f81509cbdec: pop    %rbp
                      │ │  0x00007f81509cbded: test   %eax,0x164d420d(%rip)        # 0x00007f8166ea0000
                      │ │                                                ;   {poll_return}
  0.12%    0.34%      │ │  0x00007f81509cbdf3: retq   
  0.14%    0.09%      ↘ │  0x00007f81509cbdf4: inc    %r10d              ;*iinc
                        │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@87 (line 155)
                        │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                        │                                                ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
  0.09%    0.01%        │  0x00007f81509cbdf7: cmp    $0x135,%r10d
                        ╰  0x00007f81509cbdfe: jl     0x00007f81509cbbe0  ;*if_icmpge
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@69 (line 154)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::magnitude@5 (line 201)
                                                                         ; - fourcasters.perfid.SpeedyDoubleFormatter::append@676 (line 123)
                           0x00007f81509cbe04: mov    $0xffffff65,%esi
                           0x00007f81509cbe09: vmovq  %xmm2,%rbp
                           0x00007f81509cbe0e: mov    %r10d,0xc(%rsp)
....................................................................................................
 15.80%   13.19%  <total for region 2>

....[Hottest Regions]...............................................................................
 61.40%   65.43%  [0x7f81509c71bc:0x7f81509c736a] in fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits
 15.80%   13.19%  [0x7f81509cb990:0x7f81509cbe0e] in fourcasters.perfid.SpeedyDoubleFormatter::append
  5.00%    7.43%  [0x7f81509d1fd7:0x7f81509d220d] in fourcasters.DoubleFormatting::speedyTest
  4.21%    1.07%  [0x7f81509c7098:0x7f81509c717b] in fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits
  3.13%    1.81%  [0x7f81509c7370:0x7f81509c7403] in fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits
  2.80%    2.77%  [0xffffffff810644ba:0xffffffff810644ba] in [unknown] ([unknown])
  1.08%    0.83%  [0x7f81658c3340:0x7f81658c3349] in [unknown] (libjvm.so)
  1.04%    1.13%  [0x7f81509cbe20:0x7f81509cbea5] in fourcasters.perfid.SpeedyDoubleFormatter::append
  0.68%    0.78%  [0x7f81508124e5:0x7f8150812540] in StubRoutines::jlong_disjoint_arraycopy
  0.66%    1.18%  [0x7f81508124a0:0x7f8150812514] in StubRoutines::jlong_disjoint_arraycopy
  0.65%    0.94%  [0x7f8165b10928:0x7f8165b10931] in [unknown] (libjvm.so)
  0.49%    0.84%  [0x7f81509abf20:0x7f81509abf9b] in org.openjdk.jmh.infra.Blackhole::consume
  0.27%    0.11%  [0x7f81509c716f:0x7f81509c719b] in fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits
  0.12%    0.07%  [0x7f8165a7578a:0x7f8165a757d5] in [unknown] (libjvm.so)
  0.07%    0.01%  [0xffffffff81825525:0xffffffff8182553c] in [unknown] ([unknown])
  0.06%    0.03%  [0xffffffff818255a0:0xffffffff818255a0] in [unknown] ([unknown])
  0.06%    0.01%  [0xffffffff81827650:0xffffffff81827667] in [unknown] ([unknown])
  0.06%    0.01%  [0x7f816566a3bc:0x7f816566a3f8] in [unknown] (libjvm.so)
  0.04%    0.03%  [0xffffffff813f7f05:0xffffffff813f7f07] in [unknown] ([unknown])
  0.03%           [0xffffffff81037d9e:0xffffffff81037dad] in [unknown] ([unknown])
  2.33%    2.32%  <...other 232 warm regions...>
....................................................................................................
 99.99%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 69.03%   68.44%  fourcasters.perfid.SpeedyDoubleFormatter::appendFractDigits
 16.87%   14.33%  fourcasters.perfid.SpeedyDoubleFormatter::append
  5.00%    7.43%  fourcasters.DoubleFormatting::speedyTest
  4.36%    3.85%  [unknown] ([unknown])
  2.40%    2.51%  [unknown] (libjvm.so)
  1.34%    1.97%  StubRoutines::jlong_disjoint_arraycopy
  0.49%    0.84%  org.openjdk.jmh.infra.Blackhole::consume
  0.06%    0.07%  _IO_fwrite (libc-2.23.so)
  0.06%    0.04%  print_insn (hsdis-amd64.so)
  0.04%    0.01%  oappend (hsdis-amd64.so)
  0.03%    0.04%  __GI___mempcpy (libc-2.23.so)
  0.03%    0.11%  vfprintf (libc-2.23.so)
  0.03%           <stub: invokeinterface  185 invokeinterface>
  0.03%           _itoa_word (libc-2.23.so)
  0.03%    0.01%  putop (hsdis-amd64.so)
  0.01%           _setjmp (libc-2.23.so)
  0.01%           _IO_no_init (libc-2.23.so)
  0.01%           OP_G (hsdis-amd64.so)
  0.01%           __libc_disable_asynccancel (libc-2.23.so)
  0.01%           java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes
  0.13%    0.17%  <...other 9 warm methods...>
....................................................................................................
 99.99%   99.83%  <totals>

....[Distribution by Area]..........................................................................
 92.80%   93.01%  <generated code>
  4.36%    3.85%  <native code in ([unknown])>
  2.40%    2.52%  <native code in (libjvm.so)>
  0.27%    0.48%  <native code in (libc-2.23.so)>
  0.14%    0.10%  <native code in (hsdis-amd64.so)>
  0.01%           <native code in (perf-2673.map)>
....................................................................................................
 99.99%  100.00%  <totals>



# JMH 1.12 (released 99 days ago, please consider updating!)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: fourcasters.DoubleFormatting.superslow

# Run progress: 50.00% complete, ETA 00:00:12
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 18.533 ops/s
# Warmup Iteration   2: 40.824 ops/s
# Warmup Iteration   3: 60.693 ops/s
# Warmup Iteration   4: 70.059 ops/s
# Warmup Iteration   5: 70.898 ops/s
Iteration   1: 70.545 ops/s
Iteration   2: 70.423 ops/s
Iteration   3: 70.204 ops/s
Iteration   4: 70.493 ops/s
Iteration   5: 70.150 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "superslow":
  70.363 ±(99.9%) 0.679 ops/s [Average]
  (min, avg, max) = (70.150, 70.363, 70.545), stdev = 0.176
  CI (99.9%): [69.684, 71.042] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 182273 total address lines.
Perf output processed (skipped 5.293 seconds):
 Column 1: cycles (7267 events)
 Column 2: instructions (7223 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f711d23ba20:0x7f711d23c0e8] in sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa

                                                       #           [sp+0x60]  (sp of caller)
                                                       0x00007f711d23ba20: mov    0x8(%rsi),%r10d    ;   {no_reloc}
                                                       0x00007f711d23ba24: shl    $0x3,%r10
                                                       0x00007f711d23ba28: cmp    %r10,%rax
                                                       0x00007f711d23ba2b: jne    0x00007f711d045b60  ;   {runtime_call}
                                                       0x00007f711d23ba31: xchg   %ax,%ax
                                                       0x00007f711d23ba34: nopl   0x0(%rax,%rax,1)
                                                       0x00007f711d23ba3c: xchg   %ax,%ax
                                                     [Verified Entry Point]
                                                       0x00007f711d23ba40: mov    %eax,-0x14000(%rsp)
  0.12%    0.04%                                       0x00007f711d23ba47: push   %rbp
                                                       0x00007f711d23ba48: sub    $0x50,%rsp         ;*synchronization entry
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@-1 (line 426)
  0.10%    0.06%                                       0x00007f711d23ba4c: vmovd  %r9d,%xmm1
                                                       0x00007f711d23ba51: mov    %r8d,%eax
                                                       0x00007f711d23ba54: mov    %edx,(%rsp)
                                                       0x00007f711d23ba57: mov    %rsi,0x30(%rsp)
  0.07%                                                0x00007f711d23ba5c: mov    %r12b,0x1a(%rsi)   ;*putfield decimalDigitsRoundedUp
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@59 (line 439)
                                                       0x00007f711d23ba60: mov    %r12b,0x19(%rsi)   ;*putfield exactDecimalConversion
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@64 (line 440)
                                                       0x00007f711d23ba64: mov    %rcx,0x10(%rsp)
                                                       0x00007f711d23ba69: repz bsf %rcx,%rdi        ;*invokestatic numberOfTrailingZeros
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@45 (line 431)
  0.08%    0.04%                                       0x00007f711d23ba6e: mov    $0x35,%r11d
                                                       0x00007f711d23ba74: sub    %edi,%r11d         ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@54 (line 434)
                                                       0x00007f711d23ba77: mov    %r11d,%r9d
                                                       0x00007f711d23ba7a: sub    %edx,%r9d
  0.07%                                                0x00007f711d23ba7d: dec    %r9d               ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@73 (line 443)
           0.03%                                       0x00007f711d23ba80: xor    %r10d,%r10d
                                                       0x00007f711d23ba83: test   %r9d,%r9d
                                                       0x00007f711d23ba86: cmovle %r10d,%r9d         ;*invokestatic max
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@74 (line 443)
  0.06%    0.04%                                       0x00007f711d23ba8a: cmp    $0x3e,%edx
                                                       0x00007f711d23ba8d: jg     0x00007f711d23c519  ;*if_icmpgt
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@82 (line 444)
                                                       0x00007f711d23ba93: cmp    $0xffffffffffffffeb,%edx
                                                       0x00007f711d23ba96: jl     0x00007f711d23c461  ;*if_icmplt
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@88 (line 444)
                                                       0x00007f711d23ba9c: cmp    $0x1b,%r9d
                                                       0x00007f711d23baa0: jge    0x00007f711d23c54d  ;*if_icmpge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@97 (line 448)
  0.01%                                                0x00007f711d23baa6: cmp    $0x1b,%r9d
                                                       0x00007f711d23baaa: jae    0x00007f711d23c321  ;*iaload
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@107 (line 448)
                                                       0x00007f711d23bab0: mov    $0x76d5e3428,%rsi  ;   {oop([I)}
                                                       0x00007f711d23baba: mov    %r11d,%r10d
                                                       0x00007f711d23babd: add    0x10(%rsi,%r9,4),%r10d
  0.01%                                                0x00007f711d23bac2: cmp    $0x40,%r10d
                                                       0x00007f711d23bac6: jl     0x00007f711d23c113  ;*lload_2
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@174 (line 515)
           0.01%                                       0x00007f711d23bacc: vcvtsi2sd %edx,%xmm0,%xmm0
                                                       0x00007f711d23bad0: mov    $0x8000000000000000,%r10
  0.03%    0.04%                                       0x00007f711d23bada: mov    $0x7ff0000000000000,%rdx
           0.03%                                       0x00007f711d23bae4: mov    $0x3ff0000000000000,%r8
  0.01%    0.01%                                       0x00007f711d23baee: vmulsd -0xf6(%rip),%xmm0,%xmm0        # 0x00007f711d23ba00
                                                                                                     ;   {section_word}
                                                       0x00007f711d23baf6: mov    $0xfffffffffffff,%rcx
  0.03%    0.03%                                       0x00007f711d23bb00: mov    0x10(%rsp),%rbx
                                                       0x00007f711d23bb05: and    %rcx,%rbx
                                                       0x00007f711d23bb08: or     %r8,%rbx
                                                       0x00007f711d23bb0b: vmovq  %rbx,%xmm2
  0.11%                                                0x00007f711d23bb10: vsubsd -0x110(%rip),%xmm2,%xmm2        # 0x00007f711d23ba08
                                                                                                     ;   {section_word}
                                                       0x00007f711d23bb18: vmulsd -0x110(%rip),%xmm2,%xmm2        # 0x00007f711d23ba10
                                                                                                     ;   {section_word}
                                                       0x00007f711d23bb20: vaddsd -0x110(%rip),%xmm2,%xmm2        # 0x00007f711d23ba18
                                                                                                     ;   {section_word}
           0.01%                                       0x00007f711d23bb28: vaddsd %xmm0,%xmm2,%xmm0  ;*dadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@32 (line 821)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
  0.03%    0.01%                                       0x00007f711d23bb2c: vmovq  %xmm0,%r8          ;*invokestatic doubleToRawLongBits
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@37 (line 822)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
                                                       0x00007f711d23bb31: and    %r10,%r8           ;*land
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@63 (line 824)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
  0.03%    0.01%                                       0x00007f711d23bb34: vmovq  %xmm0,%r10         ;*invokestatic doubleToRawLongBits
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@37 (line 822)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
                                                       0x00007f711d23bb39: and    %rdx,%r10
  0.03%    0.03%                                       0x00007f711d23bb3c: sar    $0x34,%r10
  0.03%    0.04%                                       0x00007f711d23bb40: mov    %r10d,%ebx         ;*l2i  ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@51 (line 823)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
                                                       0x00007f711d23bb43: mov    %ebx,%r10d
                                                       0x00007f711d23bb46: add    $0xfffffc01,%r10d  ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@55 (line 823)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
  0.03%    0.07%                                       0x00007f711d23bb4d: test   %r8,%r8
                                                       0x00007f711d23bb50: jne    0x00007f711d23c581  ;*ifeq
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@66 (line 824)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
           0.01%                                       0x00007f711d23bb56: test   %r10d,%r10d
                                                       0x00007f711d23bb59: jl     0x00007f711d23c495  ;*iflt
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@78 (line 825)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
  0.03%    0.01%                                       0x00007f711d23bb5f: cmp    $0x34,%r10d
                                                       0x00007f711d23bb63: jge    0x00007f711d23c5dd  ;*if_icmpge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@85 (line 825)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
           0.08%                                       0x00007f711d23bb69: vmovq  %xmm0,%r10         ;*invokestatic doubleToRawLongBits
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@37 (line 822)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
  0.01%    0.01%                                       0x00007f711d23bb6e: and    %rcx,%r10
                                                       0x00007f711d23bb71: mov    %edi,%ecx
                                                       0x00007f711d23bb73: mov    0x10(%rsp),%r14
  0.01%    0.03%                                       0x00007f711d23bb78: shr    %cl,%r14           ;*lushr
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@228 (line 537)
  0.01%    0.03%                                       0x00007f711d23bb7b: mov    $0x433,%ecx
  0.01%    0.12%                                       0x00007f711d23bb80: sub    %ebx,%ecx
           0.03%                                       0x00007f711d23bb82: mov    $0x10000000000000,%r8
                                                       0x00007f711d23bb8c: or     %r8,%r10
                                                       0x00007f711d23bb8f: sar    %cl,%r10
  0.04%    0.07%                                       0x00007f711d23bb92: mov    %r10d,%r13d        ;*l2i  ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::estimateDecExp@112 (line 827)
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@176 (line 515)
  0.01%    0.01%                                       0x00007f711d23bb95: mov    %r13d,%r8d
           0.04%                                       0x00007f711d23bb98: neg    %r8d               ;*ineg
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@184 (line 520)
           0.01%                                       0x00007f711d23bb9b: mov    %r13d,%ebx
  0.01%                                                0x00007f711d23bb9e: xor    %r10d,%r10d
  0.01%                                                0x00007f711d23bba1: test   %r13d,%r13d
  0.04%    0.07%                                       0x00007f711d23bba4: cmovle %r10d,%ebx         ;*invokestatic max
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@202 (line 523)
  0.01%    0.06%                                       0x00007f711d23bba8: mov    %r9d,%r10d
  0.01%    0.03%                                       0x00007f711d23bbab: add    %ebx,%r10d         ;*iadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@211 (line 524)
  0.03%    0.10%                                       0x00007f711d23bbae: xor    %edx,%edx
  0.01%                                                0x00007f711d23bbb0: test   %r8d,%r8d
                                                       0x00007f711d23bbb3: cmovle %edx,%r8d          ;*invokestatic max
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@185 (line 520)
  0.01%    0.17%                                       0x00007f711d23bbb7: add    %r8d,%r9d
  0.01%    0.03%                                       0x00007f711d23bbba: add    (%rsp),%r9d        ;*iadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@196 (line 521)
           0.08%                                       0x00007f711d23bbbe: mov    %r9d,%edx
  0.01%    0.01%                                       0x00007f711d23bbc1: sub    %eax,%edx
  0.04%    0.11%                                       0x00007f711d23bbc3: mov    %edi,%ecx
  0.01%                                                0x00007f711d23bbc5: add    %r9d,%ecx
                                                       0x00007f711d23bbc8: mov    %ecx,%eax
                                                       0x00007f711d23bbca: add    $0xffffffffffffffcc,%eax  ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@236 (line 538)
  0.07%    0.03%                                       0x00007f711d23bbcd: cmp    %r10d,%eax
  0.03%    0.04%                                       0x00007f711d23bbd0: mov    %r10d,%r9d
                                                       0x00007f711d23bbd3: cmovl  %eax,%r9d          ;*invokestatic min
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@243 (line 539)
  0.11%    0.15%                                       0x00007f711d23bbd7: sub    %r9d,%ecx
  0.04%    0.04%                                       0x00007f711d23bbda: sub    %r9d,%edx          ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@266 (line 542)
                                                       0x00007f711d23bbdd: sub    %r9d,%r10d         ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@259 (line 541)
           0.01%                                       0x00007f711d23bbe0: mov    %ecx,%ebp
                                                       0x00007f711d23bbe2: add    $0xffffffffffffffcc,%ebp  ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@252 (line 540)
  0.03%    0.04%                                       0x00007f711d23bbe5: cmp    $0x1,%r11d
                                                       0x00007f711d23bbe9: je     0x00007f711d23c629  ;*if_icmpne
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@272 (line 550)
                                                       0x00007f711d23bbef: test   %edx,%edx
                                                       0x00007f711d23bbf1: jge    0x00007f711d23c669  ;*ifge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@280 (line 554)
                                                       0x00007f711d23bbf7: mov    %ecx,%r9d
                                                       0x00007f711d23bbfa: sub    %edx,%r9d
  0.04%    0.08%                                       0x00007f711d23bbfd: sub    %edx,%r10d         ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@294 (line 559)
  0.01%    0.01%                                       0x00007f711d23bc00: add    %edx,%edi
  0.03%    0.04%                                       0x00007f711d23bc02: sub    %edi,%ecx
  0.07%    0.08%                                       0x00007f711d23bc04: add    $0xffffffffffffffcc,%r9d  ;*isub
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@287 (line 558)
           0.04%                                       0x00007f711d23bc08: mov    %ecx,%ebp
                                                       0x00007f711d23bc0a: inc    %ebp               ;*iadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@307 (line 591)
  0.06%    0.06%                                       0x00007f711d23bc0c: cmp    $0x1b,%r8d
                                                       0x00007f711d23bc10: jge    0x00007f711d23c6a9  ;*if_icmpge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@314 (line 591)
                                                       0x00007f711d23bc16: cmp    $0x1b,%r8d
                                                       0x00007f711d23bc1a: jae    0x00007f711d23c355  ;*iaload
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@322 (line 591)
  0.01%    0.04%                                       0x00007f711d23bc20: add    0x10(%rsi,%r8,4),%ecx
                                                       0x00007f711d23bc25: mov    %ebx,%r11d
  0.01%    0.03%                                       0x00007f711d23bc28: inc    %r11d              ;*iadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@340 (line 594)
                                                       0x00007f711d23bc2b: inc    %ecx               ;*iadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@330 (line 591)
  0.04%    0.01%                                       0x00007f711d23bc2d: mov    %r10d,%ebp
                                                       0x00007f711d23bc30: inc    %ebp               ;*iadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@336 (line 594)
  0.01%    0.04%                                       0x00007f711d23bc32: cmp    $0x1b,%r11d
                                                       0x00007f711d23bc36: jge    0x00007f711d23c6e1  ;*if_icmpge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@345 (line 594)
                                                       0x00007f711d23bc3c: cmp    $0x1b,%r11d
                                                       0x00007f711d23bc40: jae    0x00007f711d23c38d  ;*iaload
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@355 (line 594)
  0.01%    0.01%                                       0x00007f711d23bc46: movslq %ebx,%r11
                                                       0x00007f711d23bc49: mov    %r10d,%ebp
  0.01%    0.04%                                       0x00007f711d23bc4c: add    0x14(%rsi,%r11,4),%ebp
                                                       0x00007f711d23bc51: inc    %ebp               ;*iadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@365 (line 594)
  0.01%    0.03%                                       0x00007f711d23bc53: cmp    $0x40,%ecx
                                                       0x00007f711d23bc56: jge    0x00007f711d23c725  ;*if_icmpge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@372 (line 595)
                                                       0x00007f711d23bc5c: cmp    $0x40,%ebp
                                                       0x00007f711d23bc5f: jge    0x00007f711d23c765  ;*if_icmpge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@379 (line 595)
  0.01%    0.04%                                       0x00007f711d23bc65: cmp    $0x20,%ecx
                                                       0x00007f711d23bc68: jl     0x00007f711d23c79d  ;*if_icmpge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@386 (line 596)
  0.01%    0.03%                                       0x00007f711d23bc6e: mov    $0x76d5e3978,%rdi  ;   {oop([J)}
           0.01%                                       0x00007f711d23bc78: mov    0x10(%rdi,%r8,8),%r11  ;*laload
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@734 (line 652)
                                                       0x00007f711d23bc7d: mov    %r14,%rax
  0.04%    0.08%                                       0x00007f711d23bc80: imul   %r11,%rax
                                                       0x00007f711d23bc84: mov    %r9d,%ecx
                                                       0x00007f711d23bc87: shl    %cl,%rax           ;*lshl
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@738 (line 652)
  0.01%    0.03%                                       0x00007f711d23bc8a: cmp    $0x1b,%ebx
                                                       0x00007f711d23bc8d: jae    0x00007f711d23c3d1  ;*laload
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@746 (line 653)
  0.03%                                                0x00007f711d23bc93: mov    0x10(%rdi,%rbx,8),%rdi
                                                       0x00007f711d23bc98: mov    %r10d,%ecx
  0.01%                                                0x00007f711d23bc9b: shl    %cl,%rdi           ;*lshl
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@749 (line 653)
           0.03%                                       0x00007f711d23bc9e: test   %rdi,%rdi
                                                       0x00007f711d23bca1: je     0x00007f711d23c405  ;*ldiv
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@778 (line 662)
  0.01%    0.04%                                       0x00007f711d23bca7: mov    $0x8000000000000000,%rdx
                                                       0x00007f711d23bcb1: cmp    %rdx,%rax
                  ╭                                    0x00007f711d23bcb4: jne    0x00007f711d23bcbe
                  │                                    0x00007f711d23bcb6: xor    %edx,%edx
                  │                                    0x00007f711d23bcb8: cmp    $0xffffffffffffffff,%rdi
                  │╭                                   0x00007f711d23bcbc: je     0x00007f711d23bcc3
                  ↘│                                   0x00007f711d23bcbe: cqto   
                   │                                   0x00007f711d23bcc0: idiv   %rdi
  1.80%    1.47%   ↘                                   0x00007f711d23bcc3: mov    %r11,%r10
                                                       0x00007f711d23bcc6: shl    $0x3,%r10
                                                       0x00007f711d23bcca: mov    %rdx,%r8
                                                       0x00007f711d23bccd: shl    $0x3,%r8
  0.06%                                                0x00007f711d23bcd1: shl    %rdx
  0.01%                                                0x00007f711d23bcd4: add    %r8,%rdx           ;*lmul
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@790 (line 663)
  0.01%                                                0x00007f711d23bcd7: mov    %eax,%r9d          ;*l2i  ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@779 (line 662)
                                                       0x00007f711d23bcda: shl    %r11
  0.03%                                                0x00007f711d23bcdd: add    %r10,%r11          ;*lmul
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@798 (line 664)
  0.01%                                                0x00007f711d23bce0: mov    %rdi,%r10
  0.01%                                                0x00007f711d23bce3: shl    $0x3,%r10
                                                       0x00007f711d23bce7: mov    %rdi,%r14
  0.01%                                                0x00007f711d23bcea: shl    %r14
  0.01%                                                0x00007f711d23bced: add    %r10,%r14          ;*lmul
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@768 (line 655)
  0.01%                                                0x00007f711d23bcf0: cmp    %r11,%rdx
                                                       0x00007f711d23bcf3: jl     0x00007f711d23c7d5  ;*ifge
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@806 (line 665)
                                                       0x00007f711d23bcf9: mov    %rdx,%r10
  0.01%                                                0x00007f711d23bcfc: add    %r11,%r10          ;*ladd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@820 (line 666)
  0.01%                                                0x00007f711d23bcff: cmp    %r14,%r10
                                                       0x00007f711d23bd02: jg     0x00007f711d23c825  ;*ifle
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@824 (line 666)
  0.03%                                                0x00007f711d23bd08: mov    0x30(%rsp),%r10
                                                       0x00007f711d23bd0d: mov    0x1c(%r10),%r10d   ;*getfield digits
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@874 (line 672)
                                                       0x00007f711d23bd11: test   %r9d,%r9d
                                                       0x00007f711d23bd14: je     0x00007f711d23c108  ;*ifne
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@859 (line 668)
  0.03%                                                0x00007f711d23bd1a: add    $0x30,%r9d         ;*iadd
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@886 (line 672)
                                                       0x00007f711d23bd1e: mov    %r9d,%ebp
                                                       0x00007f711d23bd21: movzwl %bp,%ebp           ;*i2c  ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@887 (line 672)
  0.01%                                                0x00007f711d23bd24: mov    0xc(%r12,%r10,8),%ecx  ; implicit exception: dispatches to 0x00007f711d23c955
  0.03%                                                0x00007f711d23bd29: test   %ecx,%ecx
                                                       0x00007f711d23bd2b: jbe    0x00007f711d23c424
  0.01%                                                0x00007f711d23bd31: mov    %r9w,0x10(%r12,%r10,8)  ;*castore
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@888 (line 672)
                                                       0x00007f711d23bd37: mov    $0x1,%r8d          ;*iload
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@889 (line 680)
  0.03%                                                0x00007f711d23bd3d: vmovd  %xmm1,%r9d
                                                       0x00007f711d23bd42: test   %r9d,%r9d
                                                       0x00007f711d23bd45: je     0x00007f711d23c875  ;*ifeq
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@891 (line 680)
           0.01%                                       0x00007f711d23bd4b: cmp    $0xfffffffffffffffd,%r13d
                                                       0x00007f711d23bd4f: jl     0x00007f711d23c4e1  ;*if_icmplt
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@898 (line 680)
                                                       0x00007f711d23bd55: mov    %rdx,%rax
  0.04%                                                0x00007f711d23bd58: mov    $0x8000000000000000,%rdx
                                                       0x00007f711d23bd62: cmp    %rdx,%rax
                    ╭                                  0x00007f711d23bd65: jne    0x00007f711d23bd6f
                    │                                  0x00007f711d23bd67: xor    %edx,%edx
                    │                                  0x00007f711d23bd69: cmp    $0xffffffffffffffff,%rdi
                    │╭                                 0x00007f711d23bd6d: je     0x00007f711d23bd74
  0.04%             ↘│                                 0x00007f711d23bd6f: cqto   
                     │                                 0x00007f711d23bd71: idiv   %rdi
  1.79%    1.02%     ↘                                 0x00007f711d23bd74: mov    %r11,%r9
  0.01%                                                0x00007f711d23bd77: shl    $0x3,%r9
                                                       0x00007f711d23bd7b: mov    %rdx,%rcx
                                                       0x00007f711d23bd7e: shl    $0x3,%rcx
  0.01%                                                0x00007f711d23bd82: shl    %rdx
  0.01%                                                0x00007f711d23bd85: mov    %rdx,%rsi
                                                       0x00007f711d23bd88: add    %rcx,%rsi          ;*lmul
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@940 (line 685)
  0.03%                                                0x00007f711d23bd8b: mov    %eax,%ecx          ;*l2i  ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@929 (line 684)
                                                       0x00007f711d23bd8d: shl    %r11
  0.01%                                                0x00007f711d23bd90: add    %r9,%r11           ;*lmul
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@948 (line 686)
                                                       0x00007f711d23bd93: test   %r11,%r11
                                                       0x00007f711d23bd96: jle    0x00007f711d23c50d  ;*ifle
                                                                                                     ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@978 (line 688)
                                                       0x00007f711d23bd9c: cmp    %r11,%rsi
                      ╭                                0x00007f711d23bd9f: jl     0x00007f711d23c0d8  ;*ifge
                      │                                                                              ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@986 (line 689)
                      │                                0x00007f711d23bda5: xor    %r9d,%r9d          ;*istore
                      │                                                                              ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@994 (line 689)
                      │                             ↗  0x00007f711d23bda8: mov    %r11,%rdx
                      │                             │  0x00007f711d23bdab: add    %rsi,%rdx          ;*ladd
                      │                             │                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1000 (line 690)
  0.01%               │                             │  0x00007f711d23bdae: cmp    %r14,%rdx
                      │╭                            │  0x00007f711d23bdb1: jg     0x00007f711d23c0ce  ;*ifle
                      ││                            │                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1004 (line 690)
                      ││                            │  0x00007f711d23bdb7: xor    %ebx,%ebx          ;*istore
                      ││                            │                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1012 (line 690)
                      ││                           ↗│  0x00007f711d23bdb9: mov    %rsi,%rbp
  0.01%               ││                           ││  0x00007f711d23bdbc: vmovd  %r8d,%xmm2
                      ││                           ││  0x00007f711d23bdc1: vmovd  %r10d,%xmm1
  0.03%               ││                           ││  0x00007f711d23bdc6: add    $0x30,%ecx         ;*iadd
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1036 (line 700)
  0.01%               ││                           ││  0x00007f711d23bdc9: vmovd  %ecx,%xmm0
  0.01%               ││                           ││  0x00007f711d23bdcd: mov    %ecx,%eax
  0.03%               ││                           ││  0x00007f711d23bdcf: movzwl %ax,%eax           ;*i2c  ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1037 (line 700)
  0.06%               ││                           ││  0x00007f711d23bdd2: mov    0xc(%r12,%r10,8),%ecx  ;*castore
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1038 (line 700)
                      ││                           ││                                                ; implicit exception: dispatches to 0x00007f711d23c93d
  0.01%               ││                           ││  0x00007f711d23bdd7: inc    %r8d               ;*iinc
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1029 (line 700)
                      ││                           ││  0x00007f711d23bdda: vmovd  %xmm2,%esi
  0.03%               ││                           ││  0x00007f711d23bdde: cmp    %ecx,%esi
                      ││                           ││  0x00007f711d23bde0: jae    0x00007f711d23c419
  0.01%               ││                           ││  0x00007f711d23bde6: lea    (%r12,%r10,8),%rsi
  0.03%               ││                           ││  0x00007f711d23bdea: vmovd  %xmm2,%r10d
                      ││                           ││  0x00007f711d23bdef: vmovd  %xmm0,%eax
                      ││                           ││  0x00007f711d23bdf3: mov    %ax,0x10(%rsi,%r10,2)  ;*castore
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1038 (line 700)
  0.03%               ││                           ││  0x00007f711d23bdf9: cmp    %r11,%rbp
                      ││                           ││  0x00007f711d23bdfc: jl     0x00007f711d23c0ed  ;*ifne
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@916 (line 683)
                      ││                           ││  0x00007f711d23be02: cmp    %r14,%rdx
                      ││                           ││  0x00007f711d23be05: jg     0x00007f711d23c100  ;*ifne
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@921 (line 683)
                      ││                           ││  0x00007f711d23be0b: mov    %rbp,%rax
  0.01%               ││                           ││  0x00007f711d23be0e: mov    $0x8000000000000000,%rdx
  0.04%               ││                           ││  0x00007f711d23be18: cmp    %rdx,%rax
                      ││╭                          ││  0x00007f711d23be1b: jne    0x00007f711d23be25
                      │││                          ││  0x00007f711d23be1d: xor    %edx,%edx
                      │││                          ││  0x00007f711d23be1f: cmp    $0xffffffffffffffff,%rdi
                      │││╭                         ││  0x00007f711d23be23: je     0x00007f711d23be2a
  0.03%               ││↘│                         ││  0x00007f711d23be25: cqto   
                      ││ │                         ││  0x00007f711d23be27: idiv   %rdi
  1.76%    1.12%      ││ ↘                         ││  0x00007f711d23be2a: vmovq  %rax,%xmm0
  0.03%               ││                           ││  0x00007f711d23be2f: mov    %r11,%r10
                      ││                           ││  0x00007f711d23be32: shl    $0x3,%r10
                      ││                           ││  0x00007f711d23be36: mov    %rdx,%r9
  0.03%               ││                           ││  0x00007f711d23be39: shl    $0x3,%r9
                      ││                           ││  0x00007f711d23be3d: shl    %rdx
  0.01%               ││                           ││  0x00007f711d23be40: add    %r9,%rdx           ;*lmul
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@940 (line 685)
                      ││                           ││  0x00007f711d23be43: shl    %r11
  0.01%               ││                           ││  0x00007f711d23be46: add    %r10,%r11          ;*lmul
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@948 (line 686)
  0.03%               ││                           ││  0x00007f711d23be49: test   %r11,%r11
                      ││                           ││  0x00007f711d23be4c: jle    0x00007f711d23c8a5  ;*ifle
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@978 (line 688)
                      ││                           ││  0x00007f711d23be52: cmp    %r11,%rdx
                      ││                           ││  0x00007f711d23be55: jl     0x00007f711d23c0f5  ;*ifge
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@986 (line 689)
  0.01%               ││                           ││  0x00007f711d23be5b: xor    %r9d,%r9d          ;*istore
                      ││                           ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@994 (line 689)
  0.06%               ││                           ││  0x00007f711d23be5e: mov    %r11,%r10
  0.03%               ││                           ││  0x00007f711d23be61: add    %rdx,%r10
  0.01%               ││                           ││  0x00007f711d23be64: cmp    %r14,%r10
                      ││  ╭                        ││  0x00007f711d23be67: jg     0x00007f711d23c0e3  ;*ifle
                      ││  │                        ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1004 (line 690)
                      ││  │                        ││  0x00007f711d23be6d: xor    %ebx,%ebx          ;*istore
                      ││  │                        ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1012 (line 690)
  0.01%               ││  │                        ││  0x00007f711d23be6f: cmp    %ecx,%r8d
                      ││  │                        ││  0x00007f711d23be72: jge    0x00007f711d23c24a
  0.01%               ││  │                        ││  0x00007f711d23be78: vmovd  %xmm2,%eax
                      ││  │                        ││  0x00007f711d23be7c: add    $0x2,%eax
                      ││  │                        ││  0x00007f711d23be7f: mov    %eax,%r10d
  0.01%               ││  │                        ││  0x00007f711d23be82: xor    %eax,%eax
  0.01%               ││  │                        ││  0x00007f711d23be84: mov    %r10d,%eax
                      ││  │                        ││  0x00007f711d23be87: xor    %ebp,%ebp
  0.01%               ││  │                        ││  0x00007f711d23be89: cmp    %ebp,%eax
  0.01%               ││  │                        ││  0x00007f711d23be8b: cmovl  %ebp,%eax
  0.07%               ││  │                        ││  0x00007f711d23be8e: cmp    %ecx,%eax
                      ││  │                        ││  0x00007f711d23be90: cmovg  %ecx,%eax
  0.03%               ││  │                        ││  0x00007f711d23be93: mov    %eax,(%rsp)
                      ││  │                        ││  0x00007f711d23be96: mov    %rdx,%rbp
                      ││  │                        ││  0x00007f711d23be99: xor    %r10d,%r10d
  0.04%               ││  │                        ││  0x00007f711d23be9c: vmovd  %r10d,%xmm2
  0.01%               ││  │╭                       ││  0x00007f711d23bea1: jmp    0x00007f711d23beaa
                      ││  ││                       ││  0x00007f711d23bea3: nop    
                      ││  ││      ↗                ││  0x00007f711d23bea4: mov    %rdx,%rbp
                      ││  ││      │                ││  0x00007f711d23bea7: mov    %r10d,%r8d         ;*iload
                      ││  ││      │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@919 (line 683)
                      ││  │↘      │                ││  0x00007f711d23beaa: vmovq  %xmm0,%r10
  0.01%               ││  │       │                ││  0x00007f711d23beaf: mov    %r10d,%eax
                      ││  │       │                ││  0x00007f711d23beb2: mov    %r8d,%r10d
  0.04%               ││  │       │                ││  0x00007f711d23beb5: inc    %r10d              ;*iinc
                      ││  │       │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1029 (line 700)
                      ││  │       │                ││  0x00007f711d23beb8: add    $0x30,%eax         ;*iadd
                      ││  │       │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1036 (line 700)
  0.01%               ││  │       │                ││  0x00007f711d23bebb: cmp    %ecx,%r8d
                      ││  │       │                ││  0x00007f711d23bebe: jae    0x00007f711d23c266
  0.01%               ││  │       │                ││  0x00007f711d23bec4: mov    %ax,0x10(%rsi,%r8,2)  ;*castore
                      ││  │       │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1038 (line 700)
  0.04%               ││  │       │                ││  0x00007f711d23beca: cmp    %r11,%rbp
                      ││  │ ╭     │                ││  0x00007f711d23becd: jl     0x00007f711d23bffd  ;*ifne
                      ││  │ │     │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@916 (line 683)
                      ││  │ │     │                ││  0x00007f711d23bed3: test   %ebx,%ebx
                      ││  │ │╭    │                ││  0x00007f711d23bed5: jne    0x00007f711d23c007  ;*ifne
                      ││  │ ││    │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@921 (line 683)
                      ││  │ ││    │                ││  0x00007f711d23bedb: mov    %rbp,%rax
                      ││  │ ││    │                ││  0x00007f711d23bede: mov    $0x8000000000000000,%rdx
  0.03%               ││  │ ││    │                ││  0x00007f711d23bee8: cmp    %rdx,%rax
                      ││  │ ││╭   │                ││  0x00007f711d23beeb: jne    0x00007f711d23bef5
                      ││  │ │││   │                ││  0x00007f711d23beed: xor    %edx,%edx
                      ││  │ │││   │                ││  0x00007f711d23beef: cmp    $0xffffffffffffffff,%rdi
                      ││  │ │││╭  │                ││  0x00007f711d23bef3: je     0x00007f711d23befa
                      ││  │ ││↘│  │                ││  0x00007f711d23bef5: cqto   
                      ││  │ ││ │  │                ││  0x00007f711d23bef7: idiv   %rdi
  1.82%    1.36%      ││  │ ││ ↘  │                ││  0x00007f711d23befa: vmovq  %rax,%xmm0
  0.01%               ││  │ ││    │                ││  0x00007f711d23beff: mov    %r11,%r9
                      ││  │ ││    │                ││  0x00007f711d23bf02: shl    $0x3,%r9
                      ││  │ ││    │                ││  0x00007f711d23bf06: mov    %rdx,%rbx
  0.10%               ││  │ ││    │                ││  0x00007f711d23bf09: shl    $0x3,%rbx
  0.01%               ││  │ ││    │                ││  0x00007f711d23bf0d: shl    %rdx
                      ││  │ ││    │                ││  0x00007f711d23bf10: add    %rbx,%rdx          ;*lmul
                      ││  │ ││    │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@940 (line 685)
  0.01%               ││  │ ││    │                ││  0x00007f711d23bf13: shl    %r11
  0.03%               ││  │ ││    │                ││  0x00007f711d23bf16: add    %r9,%r11           ;*lmul
                      ││  │ ││    │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@948 (line 686)
  0.03%               ││  │ ││    │                ││  0x00007f711d23bf19: test   %r11,%r11
                      ││  │ ││    │                ││  0x00007f711d23bf1c: jle    0x00007f711d23c2bc  ;*ifle
                      ││  │ ││    │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@978 (line 688)
                      ││  │ ││    │                ││  0x00007f711d23bf22: cmp    %r11,%rdx
                      ││  │ ││  ╭ │                ││  0x00007f711d23bf25: jl     0x00007f711d23c0c3  ;*ifge
                      ││  │ ││  │ │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@986 (line 689)
  0.01%               ││  │ ││  │ │                ││  0x00007f711d23bf2b: xor    %r9d,%r9d          ;*istore
                      ││  │ ││  │ │                ││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@994 (line 689)
                      ││  │ ││  │ │               ↗││  0x00007f711d23bf2e: mov    %r11,%rbx
  0.03%               ││  │ ││  │ │               │││  0x00007f711d23bf31: add    %rdx,%rbx
                      ││  │ ││  │ │               │││  0x00007f711d23bf34: cmp    %r14,%rbx
                      ││  │ ││  │╭│               │││  0x00007f711d23bf37: jg     0x00007f711d23c0b9  ;*ifle
                      ││  │ ││  │││               │││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1004 (line 690)
                      ││  │ ││  │││               │││  0x00007f711d23bf3d: xor    %ebx,%ebx
  0.03%               ││  │ ││  │││              ↗│││  0x00007f711d23bf3f: cmp    (%rsp),%r10d
                      ││  │ ││  ││╰              ││││  0x00007f711d23bf43: jl     0x00007f711d23bea4
  0.04%               ││  │ ││  ││               ││││  0x00007f711d23bf49: cmp    %ecx,%r10d
                      ││  │ ││  ││               ││││  0x00007f711d23bf4c: jge    0x00007f711d23c184
                      ││  │ ││  ││               ││││  0x00007f711d23bf52: mov    %rdx,%rbp
  0.01%               ││  │ ││  ││ ╭             ││││  0x00007f711d23bf55: jmp    0x00007f711d23bf71
                      ││  │ ││  ││ │             ││││  0x00007f711d23bf57: nopw   0x0(%rax,%rax,1)
  0.18%    0.03%      ││  │ ││  ││ │     ↗       ││││  0x00007f711d23bf60: xor    %ebx,%ebx          ;*istore
                      ││  │ ││  ││ │     │       ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1012 (line 690)
  0.21%               ││  │ ││  ││ │     │↗      ││││  0x00007f711d23bf62: cmp    %ecx,%r8d
                      ││  │ ││  ││ │     ││      ││││  0x00007f711d23bf65: jge    0x00007f711d23c18d
  0.41%               ││  │ ││  ││ │     ││      ││││  0x00007f711d23bf6b: mov    %r8d,%r10d
                      ││  │ ││  ││ │     ││      ││││  0x00007f711d23bf6e: mov    %rdx,%rbp          ;*iload
                      ││  │ ││  ││ │     ││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@919 (line 683)
  0.07%               ││  │ ││  ││ ↘     ││      ││││  0x00007f711d23bf71: vmovq  %xmm0,%r8
  0.19%               ││  │ ││  ││       ││      ││││  0x00007f711d23bf76: mov    %r8d,%eax
  0.22%    0.01%      ││  │ ││  ││       ││      ││││  0x00007f711d23bf79: mov    %r10d,%r8d
  0.01%               ││  │ ││  ││       ││      ││││  0x00007f711d23bf7c: inc    %r8d               ;*iinc
                      ││  │ ││  ││       ││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1029 (line 700)
  0.14%    0.03%      ││  │ ││  ││       ││      ││││  0x00007f711d23bf7f: add    $0x30,%eax
  0.26%               ││  │ ││  ││       ││      ││││  0x00007f711d23bf82: mov    %ax,0x10(%rsi,%r10,2)  ;*castore
                      ││  │ ││  ││       ││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1038 (line 700)
  0.43%    0.03%      ││  │ ││  ││       ││      ││││  0x00007f711d23bf88: cmp    %r11,%rbp
                      ││  │ ││  ││  ╭    ││      ││││  0x00007f711d23bf8b: jl     0x00007f711d23c000  ;*ifne
                      ││  │ ││  ││  │    ││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@916 (line 683)
  0.01%               ││  │ ││  ││  │    ││      ││││  0x00007f711d23bf8d: test   %ebx,%ebx
                      ││  │ ││  ││  │╭   ││      ││││  0x00007f711d23bf8f: jne    0x00007f711d23c00a  ;*ifne
                      ││  │ ││  ││  ││   ││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@921 (line 683)
  0.11%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bf91: mov    %rbp,%rax
  0.17%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bf94: mov    $0x8000000000000000,%rdx
  0.36%    0.01%      ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bf9e: cmp    %rdx,%rax
                      ││  │ ││  ││  ││╭  ││      ││││  0x00007f711d23bfa1: jne    0x00007f711d23bfab
                      ││  │ ││  ││  │││  ││      ││││  0x00007f711d23bfa3: xor    %edx,%edx
                      ││  │ ││  ││  │││  ││      ││││  0x00007f711d23bfa5: cmp    $0xffffffffffffffff,%rdi
                      ││  │ ││  ││  │││╭ ││      ││││  0x00007f711d23bfa9: je     0x00007f711d23bfb0
                      ││  │ ││  ││  ││↘│ ││      ││││  0x00007f711d23bfab: cqto   
  0.06%               ││  │ ││  ││  ││ │ ││      ││││  0x00007f711d23bfad: idiv   %rdi
 23.10%   11.21%      ││  │ ││  ││  ││ ↘ ││      ││││  0x00007f711d23bfb0: vmovq  %rax,%xmm0
  0.37%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfb5: mov    %r11,%r9
                      ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfb8: shl    $0x3,%r9
                      ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfbc: mov    %rdx,%rbx
  0.18%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfbf: shl    $0x3,%rbx
  0.30%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfc3: shl    %rdx
  0.01%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfc6: add    %rbx,%rdx          ;*lmul
                      ││  │ ││  ││  ││   ││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@940 (line 685)
  0.11%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfc9: shl    %r11
  0.15%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfcc: add    %r9,%r11           ;*lmul
                      ││  │ ││  ││  ││   ││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@948 (line 686)
  0.39%               ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfcf: test   %r11,%r11
                      ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfd2: jle    0x00007f711d23c2bf  ;*ifle
                      ││  │ ││  ││  ││   ││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@978 (line 688)
                      ││  │ ││  ││  ││   ││      ││││  0x00007f711d23bfd8: cmp    %r11,%rdx
                      ││  │ ││  ││  ││  ╭││      ││││  0x00007f711d23bfdb: jl     0x00007f711d23c0ae  ;*ifge
                      ││  │ ││  ││  ││  │││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@986 (line 689)
  0.07%               ││  │ ││  ││  ││  │││      ││││  0x00007f711d23bfe1: xor    %r9d,%r9d          ;*istore
                      ││  │ ││  ││  ││  │││      ││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@994 (line 689)
  0.18%               ││  │ ││  ││  ││  │││     ↗││││  0x00007f711d23bfe4: mov    %rdx,%rbx
  0.32%               ││  │ ││  ││  ││  │││     │││││  0x00007f711d23bfe7: add    %r11,%rbx
  0.04%               ││  │ ││  ││  ││  │││     │││││  0x00007f711d23bfea: cmp    %r14,%rbx
                      ││  │ ││  ││  ││  │╰│     │││││  0x00007f711d23bfed: jle    0x00007f711d23bf60  ;*ifle
                      ││  │ ││  ││  ││  │ │     │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1004 (line 690)
  0.11%               ││  │ ││  ││  ││  │ │     │││││  0x00007f711d23bff3: mov    $0x1,%ebx
  0.08%    0.01%      ││  │ ││  ││  ││  │ ╰     │││││  0x00007f711d23bff8: jmpq   0x00007f711d23bf62
                      ││  │ ↘│  ││  ││  │       │││││  0x00007f711d23bffd: mov    %r10d,%r8d
                      ││  │  │  ││  ↘│  │       │││││  0x00007f711d23c000: vmovd  %xmm2,%r10d
                      ││  │  │  ││   │  │  ╭    │││││  0x00007f711d23c005: jmp    0x00007f711d23c012
                      ││  │  ↘  ││   │  │  │    │││││  0x00007f711d23c007: mov    %r10d,%r8d         ;*iinc
                      ││  │     ││   │  │  │    │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1029 (line 700)
                      ││  │     ││   ↘  │  │    │││││  0x00007f711d23c00a: vmovd  %xmm2,%r10d
                      ││  │     ││      │  │    │││││  0x00007f711d23c00f: xor    %r9d,%r9d          ;*ifne
                      ││  │     ││      │  │    │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@916 (line 683)
  0.07%               ││  │     ││      │  ↘    │││││  0x00007f711d23c012: mov    %rbp,%rdi
                      ││  │     ││      │       │││││  0x00007f711d23c015: test   %rbp,%rbp
                      ││  │     ││      │       │││││  0x00007f711d23c018: je     0x00007f711d23c179
                      ││  │     ││      │       │││││  0x00007f711d23c01e: mov    0x30(%rsp),%r11
  0.06%               ││  │     ││      │       │││││  0x00007f711d23c023: mov    %r10b,0x19(%r11)   ;*putfield exactDecimalConversion
                      ││  │     ││      │       │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1064 (line 703)
  0.33%    0.18%      ││  │     ││      │       │││││  0x00007f711d23c027: mov    %r8d,0x14(%r11)    ;*putfield nDigits
                      ││  │     ││      │       │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1442 (line 762)
  0.01%               ││  │     ││      │       │││││  0x00007f711d23c02b: mov    %r12d,0x10(%r11)   ;*putfield firstDigitIndex
                      ││  │     ││      │       │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1436 (line 761)
           0.01%      ││  │     ││      │       │││││  0x00007f711d23c02f: inc    %r13d
  0.04%               ││  │     ││      │       │││││  0x00007f711d23c032: mov    %r13d,0xc(%r11)    ;*putfield decExponent
                      ││  │     ││      │       │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1431 (line 760)
  0.01%    0.01%      ││  │     ││      │       │││││  0x00007f711d23c036: test   %ebx,%ebx
                      ││  │     ││      │   ╭   │││││  0x00007f711d23c038: je     0x00007f711d23c0a2  ;*ifeq
                      ││  │     ││      │   │   │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1447 (line 766)
                      ││  │     ││      │   │   │││││  0x00007f711d23c03a: mov    %r8d,%ebx
  0.01%               ││  │     ││      │   │   │││││  0x00007f711d23c03d: dec    %ebx               ;*isub
                      ││  │     ││      │   │   │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::roundup@10 (line 789)
                      ││  │     ││      │   │   │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1498 (line 775)
  0.01%               ││  │     ││      │   │   │││││  0x00007f711d23c03f: test   %r9d,%r9d
                      ││  │     ││      │   │╭  │││││  0x00007f711d23c042: je     0x00007f711d23c07e  ;*ifeq
                      ││  │     ││      │   ││  │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1452 (line 767)
                      ││  │     ││      │   ││  │││││  0x00007f711d23c044: shl    %rdi
                      ││  │     ││      │   ││  │││││  0x00007f711d23c047: sub    %r14,%rdi          ;*lsub
                      ││  │     ││      │   ││  │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1048 (line 702)
                      ││  │     ││      │   ││  │││││  0x00007f711d23c04a: test   %rdi,%rdi
                      ││  │     ││      │   ││  │││││  0x00007f711d23c04d: je     0x00007f711d23c8f9  ;*ifne
                      ││  │     ││      │   ││  │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1459 (line 768)
  0.03%               ││  │     ││      │   ││  │││││  0x00007f711d23c053: test   %rdi,%rdi
                      ││  │     ││      │   ││╭ │││││  0x00007f711d23c056: jle    0x00007f711d23c0a2  ;*ifle
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1494 (line 774)
           0.01%      ││  │     ││      │   │││ │││││  0x00007f711d23c058: cmp    %ecx,%ebx
                      ││  │     ││      │   │││ │││││  0x00007f711d23c05a: jae    0x00007f711d23c8dd
           0.01%      ││  │     ││      │   │││ │││││  0x00007f711d23c060: movzwl 0xe(%rsi,%r8,2),%ebp  ;*caload
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::roundup@17 (line 790)
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1498 (line 775)
  0.06%               ││  │     ││      │   │││ │││││  0x00007f711d23c066: cmp    $0x39,%ebp
                      ││  │     ││      │   │││ │││││  0x00007f711d23c069: je     0x00007f711d23c921  ;*if_icmpne
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::roundup@22 (line 791)
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1498 (line 775)
                      ││  │     ││      │   │││ │││││                                                ;   {no_reloc}
                      ││  │     ││      │   │││ │││││  0x00007f711d23c06f: movb   $0x1,0x1a(%r11)    ;*putfield decimalDigitsRoundedUp
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::roundup@100 (line 805)
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1498 (line 775)
  0.03%               ││  │     ││      │   │││ │││││  0x00007f711d23c074: inc    %ebp
                      ││  │     ││      │   │││ │││││  0x00007f711d23c076: mov    %bp,0xe(%rsi,%r8,2)  ;*castore
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::roundup@97 (line 804)
                      ││  │     ││      │   │││ │││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1498 (line 775)
                      ││  │     ││      │   │││╭│││││  0x00007f711d23c07c: jmp    0x00007f711d23c0a2
                      ││  │     ││      │   │↘│││││││  0x00007f711d23c07e: cmp    %ecx,%ebx
                      ││  │     ││      │   │ │││││││  0x00007f711d23c080: jae    0x00007f711d23c8ad
                      ││  │     ││      │   │ │││││││  0x00007f711d23c086: movzwl 0xe(%rsi,%r8,2),%ebp  ;*caload
                      ││  │     ││      │   │ │││││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::roundup@17 (line 790)
                      ││  │     ││      │   │ │││││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1505 (line 778)
  0.01%               ││  │     ││      │   │ │││││││  0x00007f711d23c08c: cmp    $0x39,%ebp
                      ││  │     ││      │   │ │││││││  0x00007f711d23c08f: je     0x00007f711d23c8c9  ;*if_icmpne
                      ││  │     ││      │   │ │││││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::roundup@22 (line 791)
                      ││  │     ││      │   │ │││││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1505 (line 778)
                      ││  │     ││      │   │ │││││││  0x00007f711d23c095: movb   $0x1,0x1a(%r11)    ;*putfield decimalDigitsRoundedUp
                      ││  │     ││      │   │ │││││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::roundup@100 (line 805)
                      ││  │     ││      │   │ │││││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@1505 (line 778)
           0.01%      ││  │     ││      │   │ │││││││  0x00007f711d23c09a: inc    %ebp
                      ││  │     ││      │   │ │││││││  0x00007f711d23c09c: mov    %bp,0xe(%rsi,%r8,2)  ;*synchronization entry
                      ││  │     ││      │   │ │││││││                                                ; - sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa@-1 (line 426)
  0.04%               ││  │     ││      │   ↘ ↘↘│││││  0x00007f711d23c0a2: add    $0x50,%rsp
  0.03%    0.03%      ││  │     ││      │       │││││  0x00007f711d23c0a6: pop    %rbp
  0.04%    0.08%      ││  │     ││      │       │││││  0x00007f711d23c0a7: test   %eax,0x18274f53(%rip)        # 0x00007f71354b1000
                      ││  │     ││      │       │││││                                                ;   {poll_return}
  0.03%    0.03%      ││  │     ││      │       │││││  0x00007f711d23c0ad: retq   
  0.18%               ││  │     ││      ↘       │││││  0x00007f711d23c0ae: mov    $0x1,%r9d
  0.10%    0.03%      ││  │     ││              ╰││││  0x00007f711d23c0b4: jmpq   0x00007f711d23bfe4
                      ││  │     │↘               ││││  0x00007f711d23c0b9: mov    $0x1,%ebx
                      ││  │     │                ╰│││  0x00007f711d23c0be: jmpq   0x00007f711d23bf3f
                      ││  │     ↘                 │││  0x00007f711d23c0c3: mov    $0x1,%r9d
                      ││  │                       ╰││  0x00007f711d23c0c9: jmpq   0x00007f711d23bf2e
                      │↘  │                        ││  0x00007f711d23c0ce: mov    $0x1,%ebx
                      │   │                        ╰│  0x00007f711d23c0d3: jmpq   0x00007f711d23bdb9
                      ↘   │                         │  0x00007f711d23c0d8: mov    $0x1,%r9d
                          │                         ╰  0x00007f711d23c0de: jmpq   0x00007f711d23bda8
                          ↘                            0x00007f711d23c0e3: mov    $0x1,%ebx
                                                       0x00007f711d23c0e8: jmpq   0x00007f711d23be6f
....................................................................................................
 40.24%   19.48%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f711d25acce:0x7f711d25b3b3] in java.text.DecimalFormat::subformat

  0.10%    0.07%            0x00007f711d25acce: test   %ebp,%ebp
                            0x00007f711d25acd0: jle    0x00007f711d25cd1d  ;*ifle
                                                                          ; - java.text.DecimalFormat::subformat@741 (line 1793)
                            0x00007f711d25acd6: mov    0xc0(%rsp),%ecx
                            0x00007f711d25acdd: cmp    %ebp,%ecx
                            0x00007f711d25acdf: jge    0x00007f711d25ce6d  ;*if_icmpge
                                                                          ; - java.text.DecimalFormat::subformat@753 (line 1793)
                            0x00007f711d25ace5: cmp    0x2c(%rsp),%ebp
                            0x00007f711d25ace9: jg     0x00007f711d25cec9  ;*if_icmple
                                                                          ; - java.text.DecimalFormat::subformat@769 (line 1801)
  0.04%                     0x00007f711d25acef: mov    (%r10),%rax
                            0x00007f711d25acf2: mov    %rax,%r8
                            0x00007f711d25acf5: and    $0x7,%r8
                            0x00007f711d25acf9: cmp    $0x5,%r8
                            0x00007f711d25acfd: jne    0x00007f711d25c195
  0.06%    0.07%            0x00007f711d25ad03: mov    0xa8(%rsi),%r8
                            0x00007f711d25ad0a: mov    %r8,%rcx
                            0x00007f711d25ad0d: or     %r15,%rcx
                            0x00007f711d25ad10: mov    %rcx,%rbx
  0.06%    0.03%            0x00007f711d25ad13: xor    %rax,%rbx
                            0x00007f711d25ad16: test   $0xffffffffffffff87,%rbx
                            0x00007f711d25ad1d: jne    0x00007f711d25c318  ;*synchronization entry
                                                                          ; - java.lang.StringBuffer::length@-1 (line 163)
                                                                          ; - java.text.DecimalFormat::subformat@789 (line 1806)
                            0x00007f711d25ad23: mov    0xc(%r10),%ebx
                            0x00007f711d25ad27: mov    $0x7,%r8d
  0.04%    0.03%            0x00007f711d25ad2d: and    (%r10),%r8
                            0x00007f711d25ad30: cmp    $0x5,%r8
                            0x00007f711d25ad34: jne    0x00007f711d25c238  ;*ireturn
                                                                          ; - java.lang.StringBuffer::length@4 (line 163)
                                                                          ; - java.text.DecimalFormat::subformat@789 (line 1806)
                            0x00007f711d25ad3a: dec    %ebp               ;*isub
                                                                          ; - java.text.DecimalFormat::subformat@797 (line 1807)
                            0x00007f711d25ad3c: test   %ebp,%ebp
                            0x00007f711d25ad3e: jl     0x00007f711d25b66c  ;*iflt
                                                                          ; - java.text.DecimalFormat::subformat@802 (line 1807)
  0.06%    0.07%            0x00007f711d25ad44: mov    %ebp,0x70(%rsp)
                            0x00007f711d25ad48: mov    $0x7,%r8d
                            0x00007f711d25ad4e: mov    %r10,0x50(%rsp)
                            0x00007f711d25ad53: mov    %rsi,0x78(%rsp)
  0.07%    0.10%            0x00007f711d25ad58: mov    %r9d,0x34(%rsp)
                            0x00007f711d25ad5d: mov    %r8,0x80(%rsp)
                            0x00007f711d25ad65: mov    %ebp,0x74(%rsp)
                            0x00007f711d25ad69: mov    %ebx,0x88(%rsp)
  0.07%    0.03%  ╭         0x00007f711d25ad70: jmp    0x00007f711d25ad7f
  0.08%    0.26%  │ ↗       0x00007f711d25ad72: mov    0xc0(%rsp),%r11
  0.29%    0.37%  │ │       0x00007f711d25ad7a: mov    %r10d,0x70(%rsp)   ;*iload
                  │ │                                                     ; - java.text.DecimalFormat::subformat@805 (line 1808)
  0.06%    0.11%  ↘ │       0x00007f711d25ad7f: mov    0x50(%r11),%ecx    ;*getfield digitList
                    │                                                     ; - java.text.DecimalFormat::subformat@808 (line 1808)
                    │       0x00007f711d25ad83: mov    %r11,0xc0(%rsp)
  0.12%    0.21%    │       0x00007f711d25ad8b: mov    0xc(%r12,%rcx,8),%r11d  ;*getfield decimalAt
                    │                                                     ; - java.text.DecimalFormat::subformat@811 (line 1808)
                    │                                                     ; implicit exception: dispatches to 0x00007f711d25d19f
  0.32%    0.36%    │       0x00007f711d25ad90: mov    0x74(%rsp),%r10d
  0.08%    0.08%    │       0x00007f711d25ad95: sub    0x70(%rsp),%r10d   ;*iload
                    │                                                     ; - java.text.DecimalFormat::subformat@805 (line 1808)
  0.01%    0.01%    │       0x00007f711d25ad9a: mov    %r10d,%r8d
  0.07%    0.30%    │       0x00007f711d25ad9d: mov    0x70(%rsp),%r10d
  0.33%    0.33%    │       0x00007f711d25ada2: cmp    %r11d,%r10d
                    │       0x00007f711d25ada5: jge    0x00007f711d25be28  ;*if_icmpge
                    │                                                     ; - java.text.DecimalFormat::subformat@814 (line 1808)
  0.11%    0.15%    │       0x00007f711d25adab: mov    0x10(%r12,%rcx,8),%ebp  ;*getfield count
                    │                                                     ; - java.text.DecimalFormat::subformat@823 (line 1808)
           0.01%    │       0x00007f711d25adb0: mov    %r8d,%r10d
  0.07%    0.15%    │       0x00007f711d25adb3: cmp    %ebp,%r10d
                    │       0x00007f711d25adb6: jge    0x00007f711d25be6d  ;*if_icmpge
                    │                                                     ; - java.text.DecimalFormat::subformat@826 (line 1808)
  0.36%    0.44%    │       0x00007f711d25adbc: mov    0x18(%r12,%rcx,8),%r11d  ;*getfield digits
                    │                                                     ; - java.text.DecimalFormat::subformat@834 (line 1810)
  0.12%    0.14%    │       0x00007f711d25adc1: mov    0xc(%r12,%r11,8),%r9d  ; implicit exception: dispatches to 0x00007f711d25d1b1
  0.10%    0.17%    │       0x00007f711d25adc6: inc    %r10d              ;*iinc
                    │                                                     ; - java.text.DecimalFormat::subformat@839 (line 1810)
  0.01%    0.08%    │       0x00007f711d25adc9: mov    %r10d,(%rsp)
  0.21%    0.17%    │       0x00007f711d25adcd: cmp    %r9d,%r8d
                    │       0x00007f711d25add0: jae    0x00007f711d25b97a
  0.22%    0.24%    │       0x00007f711d25add6: mov    0x50(%rsp),%r10
           0.01%    │       0x00007f711d25addb: mov    (%r10),%rax
  0.04%    0.14%    │       0x00007f711d25adde: lea    (%r12,%r11,8),%r10
  0.23%    0.55%    │       0x00007f711d25ade2: movzwl 0x10(%r10,%r8,2),%r10d  ;*caload
                    │                                                     ; - java.text.DecimalFormat::subformat@842 (line 1810)
  0.59%    0.90%    │       0x00007f711d25ade8: add    0xc(%rsp),%r10d
  0.29%    0.66%    │       0x00007f711d25aded: mov    %rax,%r11
  0.01%    0.10%    │       0x00007f711d25adf0: and    $0x7,%r11
  0.07%    0.22%    │       0x00007f711d25adf4: add    $0xffffffffffffffd0,%r10d
                    │                                                     ;*iadd
                    │                                                     ; - java.text.DecimalFormat::subformat@845 (line 1810)
  0.26%    0.55%    │       0x00007f711d25adf8: mov    %r10d,0xcc(%rsp)
  0.22%    0.54%    │       0x00007f711d25ae00: movzwl %r10w,%r10d        ;*i2c  ; - java.text.DecimalFormat::subformat@846 (line 1810)
  0.01%    0.04%    │       0x00007f711d25ae04: mov    %r10d,0x4(%rsp)
  0.33%    0.66%    │       0x00007f711d25ae09: cmp    $0x5,%r11
                    │       0x00007f711d25ae0d: jne    0x00007f711d25ba6f
  0.04%    0.03%    │       0x00007f711d25ae13: mov    0x78(%rsp),%r10
                    │       0x00007f711d25ae18: mov    0xa8(%r10),%r10
  0.01%             │       0x00007f711d25ae1f: mov    %r10,%r11
  0.39%    0.83%    │       0x00007f711d25ae22: or     %r15,%r11
  0.04%    0.08%    │       0x00007f711d25ae25: mov    %r11,%r8
                    │       0x00007f711d25ae28: xor    %rax,%r8
  0.01%    0.01%    │       0x00007f711d25ae2b: test   $0xffffffffffffff87,%r8
                    │       0x00007f711d25ae32: jne    0x00007f711d25baf9  ;*synchronization entry
                    │                                                     ; - java.lang.StringBuffer::append@-1 (line 382)
                    │                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
  0.43%    0.78%    │       0x00007f711d25ae38: mov    0x50(%rsp),%r10
  0.01%    0.04%    │       0x00007f711d25ae3d: mov    0x10(%r10),%r8d    ;*getfield value
                    │                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                    │                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                    │                                                     ; - java.lang.StringBuffer::append@7 (line 383)
                    │                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
           0.01%    │       0x00007f711d25ae41: mov    %r12d,0x14(%r10)   ;*putfield toStringCache
                    │                                                     ; - java.lang.StringBuffer::append@2 (line 382)
                    │                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
  0.03%    0.03%    │       0x00007f711d25ae45: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                    │                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                    │                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                    │                                                     ; - java.lang.StringBuffer::append@7 (line 383)
                    │                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
                    │                                                     ; implicit exception: dispatches to 0x00007f711d25d1c5
  0.29%    0.69%    │       0x00007f711d25ae4a: mov    0xc(%r10),%r10d    ;*getfield count
                    │                                                     ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                    │                                                     ; - java.lang.StringBuffer::append@7 (line 383)
                    │                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
  0.01%    0.01%    │       0x00007f711d25ae4e: mov    %r10d,%ecx
                    │       0x00007f711d25ae51: sub    %r11d,%ecx
  0.03%    0.03%    │       0x00007f711d25ae54: mov    %r8,%r9
  0.30%    0.94%    │       0x00007f711d25ae57: shl    $0x3,%r9           ;*getfield value
                    │                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                    │                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                    │                                                     ; - java.lang.StringBuffer::append@7 (line 383)
                    │                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
  0.06%    0.03%    │       0x00007f711d25ae5b: mov    %r9,0x18(%rsp)
                    │       0x00007f711d25ae60: inc    %ecx
  0.01%    0.01%    │       0x00007f711d25ae62: mov    %r10d,%ebp
  0.40%    0.89%    │       0x00007f711d25ae65: inc    %ebp               ;*iadd
                    │                                                     ; - java.lang.AbstractStringBuilder::append@6 (line 622)
                    │                                                     ; - java.lang.StringBuffer::append@7 (line 383)
                    │                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
  0.03%             │       0x00007f711d25ae67: test   %ecx,%ecx
                   ╭│       0x00007f711d25ae69: jg     0x00007f711d25b3ab  ;*ifle
                   ││                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                   ││                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   ││                                                     ; - java.lang.StringBuffer::append@7 (line 383)
                   ││                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
                   ││       0x00007f711d25ae6f: mov    0x50(%rsp),%r11
           0.01%   ││       0x00007f711d25ae74: mov    %ebp,0xc(%r11)     ;*return
                   ││                                                     ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                   ││                                                     ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   ││                                                     ; - java.lang.StringBuffer::append@7 (line 383)
                   ││                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
  0.37%    0.84%   ││       0x00007f711d25ae78: mov    0x18(%rsp),%r11
  0.01%    0.03%   ││       0x00007f711d25ae7d: mov    0xc(%r11),%r8d
  0.17%    0.32%   ││       0x00007f711d25ae81: cmp    %r8d,%r10d
                   ││       0x00007f711d25ae84: jae    0x00007f711d25b9f1
  0.30%    0.64%   ││       0x00007f711d25ae8a: mov    0xcc(%rsp),%r9d
  0.21%    0.40%   ││       0x00007f711d25ae92: mov    %r9w,0x10(%r11,%r10,2)
  0.01%    0.03%   ││       0x00007f711d25ae98: mov    $0x7,%r10d
  0.01%            ││       0x00007f711d25ae9e: mov    0x50(%rsp),%r11
  0.10%    0.29%   ││       0x00007f711d25aea3: and    (%r11),%r10
  0.40%    0.73%   ││       0x00007f711d25aea6: cmp    $0x5,%r10
                   ││       0x00007f711d25aeaa: jne    0x00007f711d25bb2d  ;*areturn
                   ││                                                     ; - java.lang.StringBuffer::append@12 (line 384)
                   ││                                                     ; - java.text.DecimalFormat::subformat@847 (line 1810)
  0.01%    0.15%   ││       0x00007f711d25aeb0: mov    0xc0(%rsp),%r10
                   ││       0x00007f711d25aeb8: movzbl 0x20(%r10),%ebp    ;*getfield groupingUsed
                   ││                                                     ; - java.text.NumberFormat::isGroupingUsed@1 (line 648)
                   ││                                                     ; - java.text.DecimalFormat::subformat@862 (line 1819)
  0.14%    0.22%   ││       0x00007f711d25aebd: test   %ebp,%ebp
                   ││       0x00007f711d25aebf: jne    0x00007f711d25bea9  ;*ifeq
                   ││                                                     ; - java.text.DecimalFormat::subformat@865 (line 1819)
  0.29%    0.40%   ││       0x00007f711d25aec5: mov    0x70(%rsp),%r10d
  0.03%    0.19%   ││       0x00007f711d25aeca: dec    %r10d              ;*iinc
                   ││                                                     ; - java.text.DecimalFormat::subformat@922 (line 1807)
                   ││       0x00007f711d25aecd: cmp    $0xffffffffffffffff,%r10d
                   │╰       0x00007f711d25aed1: jg     0x00007f711d25ad72
  0.01%    0.08%   │        0x00007f711d25aed7: mov    0xc0(%rsp),%r11
  0.07%    0.03%   │        0x00007f711d25aedf: mov    0x50(%rsp),%r10
           0.03%   │        0x00007f711d25aee4: mov    0x78(%rsp),%rsi
                   │        0x00007f711d25aee9: mov    0x34(%rsp),%r9d
  0.06%    0.08%   │        0x00007f711d25aeee: mov    0x80(%rsp),%rdx
           0.03%   │        0x00007f711d25aef6: mov    0x88(%rsp),%ebx
  0.01%    0.03%   │        0x00007f711d25aefd: mov    (%rsp),%r8d        ;*iflt
                   │                                                      ; - java.text.DecimalFormat::subformat@802 (line 1807)
  0.01%    0.01%   │        0x00007f711d25af01: mov    0xd0(%rsp),%edi
           0.01%   │        0x00007f711d25af08: test   %edi,%edi
                   │        0x00007f711d25af0a: jle    0x00007f711d25cf09  ;*ifgt
                   │                                                      ; - java.text.DecimalFormat::subformat@930 (line 1831)
           0.01%   │        0x00007f711d25af10: mov    (%r10),%rax
  0.01%    0.04%   │        0x00007f711d25af13: mov    %rax,%rcx
                   │        0x00007f711d25af16: and    $0x7,%rcx
  0.07%    0.04%   │        0x00007f711d25af1a: cmp    $0x5,%rcx
                   │        0x00007f711d25af1e: jne    0x00007f711d25c350
  0.01%    0.06%   │        0x00007f711d25af24: mov    0xa8(%rsi),%rcx
           0.01%   │        0x00007f711d25af2b: mov    %rcx,%rbx
                   │        0x00007f711d25af2e: or     %r15,%rbx
  0.07%    0.01%   │        0x00007f711d25af31: mov    %rbx,%rbp
                   │        0x00007f711d25af34: xor    %rax,%rbp
                   │        0x00007f711d25af37: test   $0xffffffffffffff87,%rbp
                   │        0x00007f711d25af3e: jne    0x00007f711d25c55d  ;*synchronization entry
                   │                                                      ; - java.lang.StringBuffer::length@-1 (line 163)
                   │                                                      ; - java.text.DecimalFormat::subformat@989 (line 1842)
           0.04%   │        0x00007f711d25af44: mov    0xc(%r10),%ebp
  0.01%    0.01%   │        0x00007f711d25af48: mov    $0x7,%ecx
           0.03%   │        0x00007f711d25af4d: and    (%r10),%rcx
  0.03%            │        0x00007f711d25af50: cmp    $0x5,%rcx
                   │        0x00007f711d25af54: jne    0x00007f711d25c40d  ;*ireturn
                   │                                                      ; - java.lang.StringBuffer::length@4 (line 163)
                   │                                                      ; - java.text.DecimalFormat::subformat@989 (line 1842)
  0.01%            │        0x00007f711d25af5a: mov    0x20(%rsp),%rbx
  0.01%    0.01%   │        0x00007f711d25af5f: mov    0x8(%rbx),%ecx     ; implicit exception: dispatches to 0x00007f711d25d26d
  0.04%    0.01%   │        0x00007f711d25af62: cmp    $0xf801a5b0,%ecx   ;   {metadata(&apos;java/text/DontCareFieldPosition$1&apos;)}
                   │        0x00007f711d25af68: jne    0x00007f711d25c503
  0.01%    0.03%   │        0x00007f711d25af6e: mov    %rbx,%rcx          ;*invokeinterface formatted
                   │                                                      ; - java.text.DecimalFormat::subformat@993 (line 1841)
                   │        0x00007f711d25af71: mov    (%r10),%rax
  0.01%    0.06%   │        0x00007f711d25af74: mov    %rax,%r9
  0.03%    0.03%   │        0x00007f711d25af77: and    $0x7,%r9
           0.01%   │        0x00007f711d25af7b: cmp    $0x5,%r9
                   │        0x00007f711d25af7f: jne    0x00007f711d25c595
                   │        0x00007f711d25af85: mov    0xa8(%rsi),%r9
           0.04%   │        0x00007f711d25af8c: mov    %r9,%rbx
  0.01%    0.04%   │        0x00007f711d25af8f: or     %r15,%rbx
  0.01%    0.03%   │        0x00007f711d25af92: mov    %rbx,%rbp
                   │        0x00007f711d25af95: xor    %rax,%rbp
  0.03%    0.04%   │        0x00007f711d25af98: test   $0xffffffffffffff87,%rbp
                   │        0x00007f711d25af9f: jne    0x00007f711d25c81a  ;*synchronization entry
                   │                                                      ; - java.lang.StringBuffer::length@-1 (line 163)
                   │                                                      ; - java.text.DecimalFormat::subformat@999 (line 1845)
  0.01%    0.01%   │        0x00007f711d25afa5: mov    0xc(%r10),%r9d
  0.01%    0.04%   │        0x00007f711d25afa9: mov    $0x7,%ebx
                   │        0x00007f711d25afae: and    (%r10),%rbx
  0.03%    0.03%   │        0x00007f711d25afb1: cmp    $0x5,%rbx
                   │        0x00007f711d25afb5: jne    0x00007f711d25c651  ;*ireturn
                   │                                                      ; - java.lang.StringBuffer::length@4 (line 163)
                   │                                                      ; - java.text.DecimalFormat::subformat@999 (line 1845)
  0.04%    0.03%   │        0x00007f711d25afbb: movzbl 0x41(%r11),%ebp    ;*getfield decimalSeparatorAlwaysShown
                   │                                                      ; - java.text.DecimalFormat::subformat@1005 (line 1846)
  0.01%    0.03%   │        0x00007f711d25afc0: test   %ebp,%ebp
                   │        0x00007f711d25afc2: jne    0x00007f711d25cd61  ;*ifne
                   │                                                      ; - java.text.DecimalFormat::subformat@1008 (line 1846)
                   │        0x00007f711d25afc8: mov    (%r10),%rax
  0.01%    0.03%   │        0x00007f711d25afcb: mov    %rax,%rbx
  0.04%    0.03%   │        0x00007f711d25afce: and    $0x7,%rbx
           0.01%   │        0x00007f711d25afd2: cmp    $0x5,%rbx
                   │        0x00007f711d25afd6: jne    0x00007f711d25c752
           0.01%   │        0x00007f711d25afdc: mov    0xa8(%rsi),%rbx
           0.03%   │        0x00007f711d25afe3: mov    %rbx,%rbp
  0.01%    0.01%   │        0x00007f711d25afe6: or     %r15,%rbp
  0.01%            │        0x00007f711d25afe9: mov    %rbp,%r13
                   │        0x00007f711d25afec: xor    %rax,%r13
           0.07%   │        0x00007f711d25afef: test   $0xffffffffffffff87,%r13
                   │        0x00007f711d25aff6: jne    0x00007f711d25c84d  ;*synchronization entry
                   │                                                      ; - java.lang.StringBuffer::append@-1 (line 382)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
  0.01%            │        0x00007f711d25affc: mov    0x10(%r10),%ebx    ;*getfield value
                   │                                                      ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                   │                                                      ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                      ; - java.lang.StringBuffer::append@7 (line 383)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
  0.01%    0.01%   │        0x00007f711d25b000: mov    %r12d,0x14(%r10)   ;*putfield toStringCache
                   │                                                      ; - java.lang.StringBuffer::append@2 (line 382)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
  0.04%    0.04%   │        0x00007f711d25b004: mov    0xc(%r12,%rbx,8),%ebp  ;*arraylength
                   │                                                      ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                   │                                                      ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                      ; - java.lang.StringBuffer::append@7 (line 383)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
                   │                                                      ; implicit exception: dispatches to 0x00007f711d25d28d
  0.03%    0.03%   │        0x00007f711d25b009: mov    %r9d,0x10(%rsp)
  0.01%            │        0x00007f711d25b00e: mov    %rcx,0x38(%rsp)
                   │        0x00007f711d25b013: mov    %r8d,0xd0(%rsp)
                   │        0x00007f711d25b01b: mov    %rdx,0x20(%rsp)
  0.03%    0.07%   │        0x00007f711d25b020: mov    %rsi,0x18(%rsp)
  0.01%    0.04%   │        0x00007f711d25b025: mov    %edi,0xcc(%rsp)
  0.01%    0.03%   │        0x00007f711d25b02c: mov    %r11,0xc0(%rsp)
                   │        0x00007f711d25b034: mov    0xc(%r10),%r11d    ;*getfield count
                   │                                                      ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                   │                                                      ; - java.lang.StringBuffer::append@7 (line 383)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
  0.01%    0.07%   │        0x00007f711d25b038: mov    %r10,(%rsp)
           0.06%   │        0x00007f711d25b03c: mov    %r11d,%ecx
  0.01%    0.03%   │        0x00007f711d25b03f: sub    %ebp,%r11d
                   │        0x00007f711d25b042: mov    %rbx,%r8
  0.07%    0.01%   │        0x00007f711d25b045: shl    $0x3,%r8           ;*getfield value
                   │                                                      ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                   │                                                      ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                      ; - java.lang.StringBuffer::append@7 (line 383)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
           0.01%   │        0x00007f711d25b049: inc    %r11d
  0.01%    0.01%   │        0x00007f711d25b04c: mov    %ecx,%r10d
                   │        0x00007f711d25b04f: inc    %r10d              ;*iadd
                   │                                                      ; - java.lang.AbstractStringBuilder::append@6 (line 622)
                   │                                                      ; - java.lang.StringBuffer::append@7 (line 383)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
           0.10%   │        0x00007f711d25b052: test   %r11d,%r11d
                   │        0x00007f711d25b055: jg     0x00007f711d25b679  ;*ifle
                   │                                                      ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                   │                                                      ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                      ; - java.lang.StringBuffer::append@7 (line 383)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
  0.01%    0.01%   │        0x00007f711d25b05b: mov    %ecx,%r11d         ;*return
                   │                                                      ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                   │                                                      ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │                                                      ; - java.lang.StringBuffer::append@7 (line 383)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
                   │        0x00007f711d25b05e: mov    (%rsp),%r9
  0.08%    0.08%   │        0x00007f711d25b062: mov    %r10d,0xc(%r9)     ;*putfield count
                   │                                                      ; - java.lang.AbstractStringBuilder::append@22 (line 623)
                   │                                                      ; - java.lang.StringBuffer::append@7 (line 383)
                   │                                                      ; - java.text.DecimalFormat::subformat@1019 (line 1847)
  0.10%    0.26%   │        0x00007f711d25b066: mov    %r8,%rcx
           0.01%   │        0x00007f711d25b069: mov    0xc(%r8),%r8d      ; implicit exception: dispatches to 0x00007f711d25d2a1
  0.01%            │        0x00007f711d25b06d: cmp    %r8d,%r11d
                   │        0x00007f711d25b070: jae    0x00007f711d25bf7d
                   │        0x00007f711d25b076: mov    0x30(%rsp),%r9d
  0.04%    0.07%   │        0x00007f711d25b07b: mov    %r9w,0x10(%rcx,%r11,2)
  0.01%    0.01%   │        0x00007f711d25b081: mov    $0x7,%r11d
  0.01%            │        0x00007f711d25b087: mov    (%rsp),%r8
                   │        0x00007f711d25b08b: and    (%r8),%r11
  0.04%    0.15%   │        0x00007f711d25b08e: cmp    $0x5,%r11
                   │        0x00007f711d25b092: jne    0x00007f711d25c880  ;*ireturn
                   │                                                      ; - java.lang.StringBuffer::length@4 (line 163)
                   │                                                      ; - java.text.DecimalFormat::subformat@1026 (line 1850)
  0.03%    0.01%   │        0x00007f711d25b098: mov    0x10(%rsp),%ebp
                   │        0x00007f711d25b09c: cmp    %r10d,%ebp
                   │        0x00007f711d25b09f: je     0x00007f711d25cf55  ;*if_icmpeq
                   │                                                      ; - java.text.DecimalFormat::subformat@1029 (line 1850)
                   │        0x00007f711d25b0a5: mov    (%rsp),%r10
  0.01%    0.07%   │        0x00007f711d25b0a9: mov    (%r10),%rax
  0.01%    0.03%   │        0x00007f711d25b0ac: mov    %rax,%r10
           0.01%   │        0x00007f711d25b0af: and    $0x7,%r10
  0.01%            │        0x00007f711d25b0b3: cmp    $0x5,%r10
                   │        0x00007f711d25b0b7: jne    0x00007f711d25c932
  0.04%    0.04%   │        0x00007f711d25b0bd: mov    0x18(%rsp),%r8
  0.01%    0.04%   │        0x00007f711d25b0c2: mov    0xa8(%r8),%r10
  0.01%            │        0x00007f711d25b0c9: mov    %r10,%r11
                   │        0x00007f711d25b0cc: or     %r15,%r11
  0.03%    0.04%   │        0x00007f711d25b0cf: mov    %r11,%r9
  0.03%    0.04%   │        0x00007f711d25b0d2: xor    %rax,%r9
                   │        0x00007f711d25b0d5: test   $0xffffffffffffff87,%r9
                   │        0x00007f711d25b0dc: jne    0x00007f711d25c998  ;*synchronization entry
                   │                                                      ; - java.lang.StringBuffer::length@-1 (line 163)
                   │                                                      ; - java.text.DecimalFormat::subformat@1042 (line 1853)
                   │        0x00007f711d25b0e2: mov    (%rsp),%r10
  0.01%    0.03%   │        0x00007f711d25b0e6: mov    0xc(%r10),%r9d
           0.04%   │        0x00007f711d25b0ea: mov    $0x7,%r10d
  0.01%    0.03%   │        0x00007f711d25b0f0: mov    (%rsp),%r11
                   │        0x00007f711d25b0f4: and    (%r11),%r10
  0.01%    0.04%   │        0x00007f711d25b0f7: cmp    $0x5,%r10
                   │        0x00007f711d25b0fb: jne    0x00007f711d25ca02  ;*ireturn
                   │                                                      ; - java.lang.StringBuffer::length@4 (line 163)
                   │                                                      ; - java.text.DecimalFormat::subformat@1052 (line 1855)
  0.01%    0.03%   │        0x00007f711d25b101: mov    0xc8(%rsp),%edi
                   │        0x00007f711d25b108: test   %edi,%edi
                   │        0x00007f711d25b10a: jle    0x00007f711d25b8aa  ;*if_icmpge
                   │                                                      ; - java.text.DecimalFormat::subformat@1064 (line 1857)
                   │        0x00007f711d25b110: mov    0x28(%rsp),%ebx
           0.06%   │        0x00007f711d25b114: test   %ebx,%ebx
                   │        0x00007f711d25b116: jne    0x00007f711d25cc48  ;*iload
                   │                                                      ; - java.text.DecimalFormat::subformat@1067 (line 1864)
  0.03%    0.03%   │        0x00007f711d25b11c: xor    %r11d,%r11d
  0.01%    0.04%   │ ╭      0x00007f711d25b11f: jmpq   0x00007f711d25b293
                   │ │      0x00007f711d25b124: nopl   0x0(%rax,%rax,1)
                   │ │      0x00007f711d25b12c: xchg   %ax,%ax            ;*iconst_m1
                   │ │                                                    ; - java.text.DecimalFormat::subformat@1094 (line 1872)
  0.21%    0.22%   │ │↗↗    0x00007f711d25b130: mov    0xc(%r12,%rsi,8),%r10d  ; implicit exception: dispatches to 0x00007f711d25d1d9
  0.12%    0.12%   │ │││    0x00007f711d25b135: mov    $0xffffffff,%edx
  0.11%    0.07%   │ │││    0x00007f711d25b13a: sub    %r11d,%edx         ;*isub
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1097 (line 1872)
  0.15%    0.17%   │ │││    0x00007f711d25b13d: dec    %r10d              ;*isub
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1106 (line 1872)
  0.18%    0.24%   │ │││    0x00007f711d25b140: cmp    %r10d,%edx
                   │ │││    0x00007f711d25b143: jg     0x00007f711d25bed9  ;*if_icmple
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1107 (line 1872)
  0.12%    0.19%   │ │││    0x00007f711d25b149: mov    0x10(%r12,%rsi,8),%ebp  ;*getfield count
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1131 (line 1879)
  0.07%    0.18%   │ │││    0x00007f711d25b14e: cmp    %ebp,%ecx
                   │ │││    0x00007f711d25b150: jge    0x00007f711d25bf35  ;*if_icmpge
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1134 (line 1879)
  0.12%    0.28%   │ │││    0x00007f711d25b156: mov    0x18(%r12,%rsi,8),%edx  ;*getfield digits
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1142 (line 1880)
           0.07%   │ │││    0x00007f711d25b15b: mov    0xc(%r12,%rdx,8),%esi  ; implicit exception: dispatches to 0x00007f711d25d1e9
  0.77%    1.72%   │ │││    0x00007f711d25b160: mov    %ecx,%r10d
  0.08%    0.01%   │ │││    0x00007f711d25b163: inc    %r10d              ;*iinc
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1147 (line 1880)
  0.03%    0.01%   │ │││    0x00007f711d25b166: cmp    %esi,%ecx
                   │ │││    0x00007f711d25b168: jae    0x00007f711d25bbd9
  0.33%    0.39%   │ │││    0x00007f711d25b16e: mov    %r10d,0x30(%rsp)
                   │ │││    0x00007f711d25b173: mov    %r11d,0x2c(%rsp)
  0.04%    0.10%   │ │││    0x00007f711d25b178: mov    %r9d,0x28(%rsp)
  0.04%    0.04%   │ │││    0x00007f711d25b17d: mov    %r8,0x18(%rsp)
  0.23%    0.42%   │ │││    0x00007f711d25b182: mov    %edi,0x10(%rsp)
  0.01%    0.01%   │ │││    0x00007f711d25b186: mov    %ebx,0xc8(%rsp)
  0.01%    0.03%   │ │││    0x00007f711d25b18d: mov    (%rsp),%r10
           0.07%   │ │││    0x00007f711d25b191: mov    (%r10),%rax
  0.36%    0.61%   │ │││    0x00007f711d25b194: lea    (%r12,%rdx,8),%r10
  0.04%            │ │││    0x00007f711d25b198: movzwl 0x10(%r10,%rcx,2),%r10d  ;*caload
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1150 (line 1880)
  0.06%    0.07%   │ │││    0x00007f711d25b19e: add    0xc(%rsp),%r10d
  0.07%    0.08%   │ │││    0x00007f711d25b1a3: mov    %rax,%r8
  0.25%    0.19%   │ │││    0x00007f711d25b1a6: and    $0x7,%r8
  0.01%            │ │││    0x00007f711d25b1aa: add    $0xffffffffffffffd0,%r10d
                   │ │││                                                  ;*iadd
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1153 (line 1880)
  0.17%    0.10%   │ │││    0x00007f711d25b1ae: mov    %r10d,0x34(%rsp)
  0.15%    0.48%   │ │││    0x00007f711d25b1b3: mov    %r10d,%r11d
  0.06%    0.01%   │ │││    0x00007f711d25b1b6: movzwl %r11w,%r11d        ;*i2c  ; - java.text.DecimalFormat::subformat@1154 (line 1880)
  0.03%            │ │││    0x00007f711d25b1ba: mov    %r11d,0x40(%rsp)
  0.33%    0.55%   │ │││    0x00007f711d25b1bf: cmp    $0x5,%r8
                   │ │││    0x00007f711d25b1c3: jne    0x00007f711d25bcaa
  0.03%    0.01%   │ │││    0x00007f711d25b1c9: mov    0x18(%rsp),%r10
           0.03%   │ │││    0x00007f711d25b1ce: mov    0xa8(%r10),%r8
                   │ │││    0x00007f711d25b1d5: mov    %r8,%r11
  0.33%    0.46%   │ │││    0x00007f711d25b1d8: or     %r15,%r11
  0.03%    0.01%   │ │││    0x00007f711d25b1db: mov    %r11,%r10
  0.01%    0.03%   │ │││    0x00007f711d25b1de: xor    %rax,%r10
                   │ │││    0x00007f711d25b1e1: test   $0xffffffffffffff87,%r10
                   │ │││    0x00007f711d25b1e8: jne    0x00007f711d25bd1d  ;*synchronization entry
                   │ │││                                                  ; - java.lang.StringBuffer::append@-1 (line 382)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
  0.26%    0.54%   │ │││    0x00007f711d25b1ee: mov    (%rsp),%r10
           0.03%   │ │││    0x00007f711d25b1f2: mov    0x10(%r10),%r11d   ;*getfield value
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │ │││                                                  ; - java.lang.StringBuffer::append@7 (line 383)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
  0.07%            │ │││    0x00007f711d25b1f6: mov    %r12d,0x14(%r10)   ;*putfield toStringCache
                   │ │││                                                  ; - java.lang.StringBuffer::append@2 (line 382)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
  0.01%    0.01%   │ │││    0x00007f711d25b1fa: mov    0xc(%r12,%r11,8),%r10d  ;*arraylength
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 120)
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │ │││                                                  ; - java.lang.StringBuffer::append@7 (line 383)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
                   │ │││                                                  ; implicit exception: dispatches to 0x00007f711d25d1fd
  0.62%    0.71%   │ │││    0x00007f711d25b1ff: mov    (%rsp),%r8
                   │ │││    0x00007f711d25b203: mov    0xc(%r8),%r8d      ;*getfield count
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::append@2 (line 622)
                   │ │││                                                  ; - java.lang.StringBuffer::append@7 (line 383)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
           0.03%   │ │││    0x00007f711d25b207: mov    %r8d,%r9d
  0.04%            │ │││    0x00007f711d25b20a: sub    %r10d,%r9d
  0.32%    0.55%   │ │││    0x00007f711d25b20d: mov    %r11,%rcx
  0.01%    0.01%   │ │││    0x00007f711d25b210: shl    $0x3,%rcx          ;*getfield value
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 120)
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │ │││                                                  ; - java.lang.StringBuffer::append@7 (line 383)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
           0.01%   │ │││    0x00007f711d25b214: mov    %rcx,0x48(%rsp)
           0.01%   │ │││    0x00007f711d25b219: inc    %r9d
  0.33%    0.55%   │ │││    0x00007f711d25b21c: mov    %r8d,%ebp
           0.03%   │ │││    0x00007f711d25b21f: inc    %ebp               ;*iadd
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::append@6 (line 622)
                   │ │││                                                  ; - java.lang.StringBuffer::append@7 (line 383)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
           0.03%   │ │││    0x00007f711d25b221: test   %r9d,%r9d
                   │ │││    0x00007f711d25b224: jg     0x00007f711d25b50e  ;*ifle
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 120)
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │ │││                                                  ; - java.lang.StringBuffer::append@7 (line 383)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
  0.11%    0.30%   │ │││    0x00007f711d25b22a: mov    (%rsp),%r10
  0.21%    0.33%   │ │││    0x00007f711d25b22e: mov    %ebp,0xc(%r10)     ;*return
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15 (line 122)
                   │ │││                                                  ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                   │ │││                                                  ; - java.lang.StringBuffer::append@7 (line 383)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
           0.01%   │ │││    0x00007f711d25b232: mov    0x48(%rsp),%r10
  0.17%    0.07%   │ │││    0x00007f711d25b237: mov    0xc(%r10),%r10d
  0.50%    0.57%   │ │││    0x00007f711d25b23b: cmp    %r10d,%r8d
                   │ │││    0x00007f711d25b23e: jae    0x00007f711d25bc2d
  0.54%    0.79%   │ │││    0x00007f711d25b244: mov    0x48(%rsp),%r10
  0.07%    0.14%   │ │││    0x00007f711d25b249: mov    0x34(%rsp),%r11d
  0.01%    0.01%   │ │││    0x00007f711d25b24e: mov    %r11w,0x10(%r10,%r8,2)
  0.25%    0.33%   │ │││    0x00007f711d25b254: mov    $0x7,%r10d
  0.23%    0.33%   │ │││    0x00007f711d25b25a: mov    (%rsp),%r11
  0.01%            │ │││    0x00007f711d25b25e: and    (%r11),%r10
  0.01%    0.03%   │ │││    0x00007f711d25b261: cmp    $0x5,%r10
                   │ │││    0x00007f711d25b265: jne    0x00007f711d25bd50  ;*areturn
                   │ │││                                                  ; - java.lang.StringBuffer::append@12 (line 384)
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1155 (line 1880)
  0.17%    0.15%   │ │││    0x00007f711d25b26b: mov    0x2c(%rsp),%r11d
  0.23%    0.22%   │ │││    0x00007f711d25b270: inc    %r11d              ;*iinc
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1169 (line 1857)
                   │ │││    0x00007f711d25b273: cmp    0x10(%rsp),%r11d
                   │ │││    0x00007f711d25b278: jge    0x00007f711d25b7fd  ;*if_icmpge
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1064 (line 1857)
                   │ │││    0x00007f711d25b27e: mov    0xc8(%rsp),%ebx
  0.12%    0.33%   │ │││    0x00007f711d25b285: mov    0x10(%rsp),%edi
  0.19%    0.24%   │ │││    0x00007f711d25b289: mov    0x18(%rsp),%r8
                   │ │││    0x00007f711d25b28e: mov    0x28(%rsp),%r9d    ;*iload
                   │ │││                                                  ; - java.text.DecimalFormat::subformat@1067 (line 1864)
  0.01%    0.03%   │ ↘││    0x00007f711d25b293: mov    0xc0(%rsp),%r13
  0.06%    0.24%   │  ││    0x00007f711d25b29b: mov    0x50(%r13),%esi    ;*getfield digitList
                   │  ││                                                  ; - java.text.DecimalFormat::subformat@1082 (line 1864)
  0.19%    0.26%   │  ││    0x00007f711d25b29f: mov    %r11d,%ecx
                   │  ││    0x00007f711d25b2a2: add    0xd0(%rsp),%ecx    ;*iload
                   │  ││                                                  ; - java.text.DecimalFormat::subformat@1067 (line 1864)
  0.03%    0.03%   │  ││    0x00007f711d25b2a9: cmp    0xcc(%rsp),%r11d
                   │  ╰│    0x00007f711d25b2b1: jl     0x00007f711d25b130  ;*if_icmplt
                   │   │                                                  ; - java.text.DecimalFormat::subformat@1071 (line 1864)
  0.06%    0.12%   │   │    0x00007f711d25b2b7: mov    0x10(%r12,%rsi,8),%r10d  ; implicit exception: dispatches to 0x00007f711d25d20d
  0.26%    0.47%   │   │    0x00007f711d25b2bc: cmp    %r10d,%ecx
                   │   ╰    0x00007f711d25b2bf: jl     0x00007f711d25b130  ;*goto
                   │                                                      ; - java.text.DecimalFormat::subformat@1091 (line 1866)
  0.03%    0.07%   │        0x00007f711d25b2c5: mov    (%rsp),%r10
  0.01%    0.01%   │        0x00007f711d25b2c9: mov    (%r10),%rax
           0.03%   │        0x00007f711d25b2cc: mov    %rax,%r10
  0.03%            │        0x00007f711d25b2cf: and    $0x7,%r10
  0.01%    0.03%   │        0x00007f711d25b2d3: cmp    $0x5,%r10
                   │        0x00007f711d25b2d7: jne    0x00007f711d25cac4
  0.01%            │        0x00007f711d25b2dd: mov    0xa8(%r8),%r10
  0.01%    0.01%   │        0x00007f711d25b2e4: mov    %r10,%r11
  0.01%    0.03%   │        0x00007f711d25b2e7: or     %r15,%r11
           0.04%   │        0x00007f711d25b2ea: mov    %r11,%r8
  0.01%            │        0x00007f711d25b2ed: xor    %rax,%r8
  0.01%    0.01%   │        0x00007f711d25b2f0: test   $0xffffffffffffff87,%r8
                   │        0x00007f711d25b2f7: jne    0x00007f711d25cc11
  0.01%    0.01%   │        0x00007f711d25b2fd: mov    0x20(%rsp),%r10
  0.03%    0.01%   │        0x00007f711d25b302: mov    (%rsp),%r11
                   │        0x00007f711d25b306: and    (%r11),%r10
  0.03%    0.01%   │        0x00007f711d25b309: cmp    $0x5,%r10
                   │        0x00007f711d25b30d: jne    0x00007f711d25cb64  ;*ireturn
                   │                                                      ; - java.lang.StringBuffer::length@4 (line 163)
                   │                                                      ; - java.text.DecimalFormat::subformat@1186 (line 1888)
  0.03%            │        0x00007f711d25b313: mov    0x8(%rsp),%r11d
  0.04%    0.03%   │        0x00007f711d25b318: test   %r11d,%r11d
                   │    ╭   0x00007f711d25b31b: je     0x00007f711d25b35e  ;*ifeq
                   │    │                                                 ; - java.text.DecimalFormat::subformat@1196 (line 1891)
                   │    │   0x00007f711d25b31d: mov    0x60(%r13),%r10d   ;*getfield negativeSuffix
                   │    │                                                 ; - java.text.DecimalFormat::subformat@1202 (line 1892)
  0.01%    0.01%   │    │   0x00007f711d25b321: mov    0x84(%r13),%ebp    ;*getfield negativeSuffixFieldPositions
                   │    │                                                 ; - java.text.DecimalFormat::getNegativeSuffixFieldPositions@1 (line 2538)
                   │    │                                                 ; - java.text.DecimalFormat::subformat@1207 (line 1893)
           0.06%   │    │   0x00007f711d25b328: test   %ebp,%ebp
                   │    │   0x00007f711d25b32a: je     0x00007f711d25d075  ;*invokespecial getNegativeSuffixFieldPositions
                   │    │                                                 ; - java.text.DecimalFormat::subformat@1207 (line 1893)
  0.01%    0.01%   │    │   0x00007f711d25b330: mov    %rbp,%r9
                   │    │   0x00007f711d25b333: shl    $0x3,%r9           ;*getfield negativeSuffixFieldPositions
                   │    │                                                 ; - java.text.DecimalFormat::getNegativeSuffixFieldPositions@1 (line 2538)
                   │    │                                                 ; - java.text.DecimalFormat::subformat@1207 (line 1893)
                   │    │   0x00007f711d25b337: mov    %r10,%rcx
  0.01%            │    │   0x00007f711d25b33a: shl    $0x3,%rcx          ;*getfield negativeSuffix
                   │    │                                                 ; - java.text.DecimalFormat::subformat@1202 (line 1892)
           0.01%   │    │   0x00007f711d25b33e: mov    %r13,%rsi
                   │    │   0x00007f711d25b341: mov    (%rsp),%rdx
                   │    │   0x00007f711d25b345: mov    0x38(%rsp),%r8
           0.03%   │    │   0x00007f711d25b34a: mov    $0x76de32a20,%rdi  ;   {oop(a &apos;java/text/NumberFormat$Field&apos;)}
           0.03%   │    │   0x00007f711d25b354: xchg   %ax,%ax
  0.01%            │    │   0x00007f711d25b357: callq  0x00007f711d045d60  ; OopMap{[0]=Oop off=2140}
                   │    │                                                 ;*invokespecial append
                   │    │                                                 ; - java.text.DecimalFormat::subformat@1213 (line 1892)
                   │    │                                                 ;   {optimized virtual_call}
  0.03%    0.08%   │    │╭  0x00007f711d25b35c: jmp    0x00007f711d25b398
           0.01%   │    ↘│  0x00007f711d25b35e: mov    0x58(%r13),%r10d   ;*getfield positiveSuffix
                   │     │                                                ; - java.text.DecimalFormat::subformat@1222 (line 1895)
  0.01%    0.01%   │     │  0x00007f711d25b362: mov    0x7c(%r13),%ebp    ;*getfield positiveSuffixFieldPositions
                   │     │                                                ; - java.text.DecimalFormat::getPositiveSuffixFieldPositions@1 (line 2497)
                   │     │                                                ; - java.text.DecimalFormat::subformat@1227 (line 1896)
  0.01%    0.01%   │     │  0x00007f711d25b366: test   %ebp,%ebp
                   │     │  0x00007f711d25b368: je     0x00007f711d25d005  ;*invokespecial getPositiveSuffixFieldPositions
                   │     │                                                ; - java.text.DecimalFormat::subformat@1227 (line 1896)
  0.01%    0.01%   │     │  0x00007f711d25b36e: mov    %rbp,%r9
  0.01%            │     │  0x00007f711d25b371: shl    $0x3,%r9           ;*getfield positiveSuffixFieldPositions
                   │     │                                                ; - java.text.DecimalFormat::getPositiveSuffixFieldPositions@1 (line 2497)
                   │     │                                                ; - java.text.DecimalFormat::subformat@1227 (line 1896)
  0.01%    0.01%   │     │  0x00007f711d25b375: mov    %r10,%rcx
  0.01%            │     │  0x00007f711d25b378: shl    $0x3,%rcx          ;*getfield positiveSuffix
                   │     │                                                ; - java.text.DecimalFormat::subformat@1222 (line 1895)
           0.01%   │     │  0x00007f711d25b37c: mov    %r13,%rsi
                   │     │  0x00007f711d25b37f: mov    (%rsp),%rdx
  0.01%    0.01%   │     │  0x00007f711d25b383: mov    0x38(%rsp),%r8
                   │     │  0x00007f711d25b388: mov    $0x76de32a20,%rdi  ;   {oop(a &apos;java/text/NumberFormat$Field&apos;)}
  0.01%            │     │  0x00007f711d25b392: nop    
                   │     │  0x00007f711d25b393: callq  0x00007f711d045d60  ; OopMap{[0]=Oop off=2200}
                   │     │                                                ;*invokespecial append
                   │     │                                                ; - java.text.DecimalFormat::subformat@1233 (line 1895)
                   │     │                                                ;   {optimized virtual_call}
  0.08%    0.26%   │     ↘  0x00007f711d25b398: mov    (%rsp),%rax
  0.01%            │        0x00007f711d25b39c: add    $0xb0,%rsp
  0.03%    0.01%   │        0x00007f711d25b3a3: pop    %rbp
  0.08%    0.10%   │        0x00007f711d25b3a4: test   %eax,0x18255c56(%rip)        # 0x00007f71354b1000
                   │                                                      ;   {poll_return}
           0.01%   │        0x00007f711d25b3aa: retq   
                   ↘        0x00007f711d25b3ab: mov    %r11d,%ebx
                            0x00007f711d25b3ae: shl    %ebx               ;*imul
                                                                          ; - java.lang.AbstractStringBuilder::expandCapacity@6 (line 129)
                                                                          ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 121)
                                                                          ; - java.lang.AbstractStringBuilder::append@7 (line 622)
                                                                          ; - java.lang.StringBuffer::append@7 (line 383)
                                                                          ; - java.text.DecimalFormat::subformat@847 (line 1810)
                            0x00007f711d25b3b0: mov    %ebx,%r9d
                            0x00007f711d25b3b3: sub    %r10d,%r9d
....................................................................................................
 21.11%   35.43%  <total for region 2>

....[Hottest Regions]...............................................................................
 40.24%   19.48%  [0x7f711d23ba20:0x7f711d23c0e8] in sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa
 21.11%   35.43%  [0x7f711d25acce:0x7f711d25b3b3] in java.text.DecimalFormat::subformat
  6.51%    9.54%  [0x7f711d226db5:0x7f711d226ef0] in java.text.DigitList::set
  4.29%    4.29%  [0xffffffff810644ba:0xffffffff810644bd] in [unknown] ([unknown])
  3.14%    3.16%  [0x7f711d24da25:0x7f711d24ddd3] in java.text.DecimalFormat::format
  2.72%    2.76%  [0x7f711d2575dd:0x7f711d257957] in fourcasters.DoubleFormatting::superslow
  2.30%    1.40%  [0x7f711d22f7a0:0x7f711d22f9d7] in java.text.DecimalFormat::append
  1.60%    1.52%  [0x7f711d05224a:0x7f711d0522ff] in StubRoutines::jshort_arraycopy; StubRoutines::jshort_disjoint_arraycopy
  1.43%    1.58%  [0x7f711d0521d0:0x7f711d052284] in StubRoutines::jshort_disjoint_arraycopy
  1.43%    0.84%  [0x7f7133ed4340:0x7f7133ed4349] in [unknown] (libjvm.so)
  1.39%    1.91%  [0x7f711d25ab00:0x7f711d25ace9] in java.text.DecimalFormat::subformat
  1.36%    1.90%  [0x7f711d25b4f4:0x7f711d25b62c] in java.text.DecimalFormat::subformat
  1.29%    1.43%  [0x7f711d24bfa0:0x7f711d24c147] in sun.misc.FloatingDecimal$BinaryToASCIIBuffer::getChars
  1.18%    1.68%  [0x7f711d24d920:0x7f711d24da22] in java.text.DecimalFormat::format
  1.09%    0.98%  [0x7f711d25b84a:0x7f711d25b8b7] in java.text.DecimalFormat::subformat
  1.00%    1.08%  [0x7f711d24df71:0x7f711d24dfc0] in java.text.DecimalFormat::format
  0.83%    1.36%  [0x7f711d22fcac:0x7f711d22fd1c] in java.text.DecimalFormat::append
  0.83%    1.50%  [0x7f711d24e0a9:0x7f711d24e109] in java.text.DecimalFormat::format
  0.76%    1.44%  [0x7f711d226efa:0x7f711d22701f] in java.text.DigitList::set
  0.59%    0.87%  [0x7f7134121928:0x7f7134121942] in [unknown] (libjvm.so)
  4.90%    5.87%  <...other 255 warm regions...>
....................................................................................................
 99.99%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 40.25%   19.48%  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::dtoa
 25.29%   40.55%  java.text.DecimalFormat::subformat
  7.93%   12.13%  java.text.DigitList::set
  6.23%    7.55%  java.text.DecimalFormat::format
  5.81%    5.66%  [unknown] ([unknown])
  3.12%    2.76%  java.text.DecimalFormat::append
  2.85%    2.51%  [unknown] (libjvm.so)
  2.72%    2.76%  fourcasters.DoubleFormatting::superslow
  1.60%    1.52%  StubRoutines::jshort_arraycopy; StubRoutines::jshort_disjoint_arraycopy
  1.43%    1.58%  StubRoutines::jshort_disjoint_arraycopy
  1.29%    1.44%  sun.misc.FloatingDecimal$BinaryToASCIIBuffer::getChars
  0.88%    1.50%  StubRoutines::jlong_disjoint_arraycopy
  0.15%    0.24%  org.openjdk.jmh.infra.Blackhole::consume
  0.06%           pthread_self; pthread_mutex_unlock (libc-2.23.so)
  0.04%           print_insn (hsdis-amd64.so)
  0.03%           _IO_file_write@@GLIBC_2.2.5 (libc-2.23.so)
  0.03%    0.03%  _itoa_word (libc-2.23.so)
  0.03%    0.01%  pthread_getspecific (libpthread-2.23.so)
  0.01%           fwrite@plt (libjvm.so)
  0.01%    0.07%  _IO_fwrite (libc-2.23.so)
  0.22%    0.11%  <...other 16 warm methods...>
....................................................................................................
 99.99%   99.88%  <totals>

....[Distribution by Area]..........................................................................
 90.93%   91.50%  <generated code>
  5.81%    5.66%  <native code in ([unknown])>
  2.86%    2.51%  <native code in (libjvm.so)>
  0.25%    0.24%  <native code in (libc-2.23.so)>
  0.07%    0.07%  <native code in (hsdis-amd64.so)>
  0.07%    0.03%  <native code in (libpthread-2.23.so)>
....................................................................................................
 99.99%  100.00%  <totals>



# Run complete. Total time: 00:00:26

Benchmark                          Mode  Cnt    Score   Error  Units
DoubleFormatting.speedyTest       thrpt    5  224.731 ± 2.248  ops/s
DoubleFormatting.speedyTest:·asm  thrpt           NaN            ---
DoubleFormatting.superslow        thrpt    5   70.363 ± 0.679  ops/s
DoubleFormatting.superslow:·asm   thrpt           NaN            ---
